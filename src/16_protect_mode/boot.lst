     1                                  ;**************************
     2                                  ; ÂÆèËÆæÂÆö
     3                                  ;*************************
     4                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist  ;//1-* «“ª∏ˆ“‘…œµƒ≤Œ ˝
     2                              <1> 
     3                              <1> 	%rep %0 - 1         ;//%0 «≤Œ ˝µƒ∏ˆ ˝
     4                              <1> 		push %{-1:-1}  ;//%Ω´≤Œ ˝µπ◊≈—π’ª
     5                              <1> 		%rotate -1   
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1      ;//ª÷∏¥‘≠¿¥µƒ≤Œ ˝
     8                              <1> 
     9                              <1> 	call %1
    10                              <1> 	%if 1 < %0
    11                              <1> 		add sp,(__BITS__ >> 3)*(%0 - 1)     ;//__BITS__ «±Ì æ16±»Ãÿƒ£ Ωªπ «32±»Ãÿƒ£ Ω
    12                              <1> 	%endif									;//∏¯√ø∏ˆ≤Œ ˝∑÷≈‰’ªø’º‰
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 <res 00000002>      <1> 	.no resw 1	 ;«˝∂Ø∫≈
    17 00000002 <res 00000002>      <1> 	.cyln resw 1 ;cylinder
    18 00000004 <res 00000002>      <1> 	.head resw 1 ;head
    19 00000006 <res 00000002>      <1> 	.sect resw 1 ;sector
    20                              <1> endstruc
    21                              <1> 
     5                                  %include "../include/define.s"
     1                              <1> BOOT_LOAD equ 0x7C00      ;//boot≥Ã–Úº”‘ÿµÿ÷∑
     2                              <1> BOOT_SIZE equ (1024 * 8)  ;//boot¥˙¬Î∂Œ¥Û–°
     3                              <1> BOOT_END  equ (BOOT_LOAD + BOOT_SIZE) ;
     4                              <1> 
     5                              <1> SECT_SIZE equ (512)       ;//sector¥Û–°
     6                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)   ;//bootµƒsector ˝
     7                              <1> 
     8                              <1> E820_RECORD_SIZE equ 20
     9                              <1> 
    10                              <1> KERNEL_LOAD equ 0x0010_1000
    11                              <1> KERNEL_SIZE equ (1024*8) ;//kernelµƒ¥Û–°»‘»ª «8k
    12                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     6                                  
     7                                  ORG BOOT_LOAD               ;ÂêëÁºñËØëÂô®ÊåáÁ§∫Âä†ËΩΩÂú∞ÂùÄ
     8                                  
     9                                  entry:
    10 00000000 EB58                    	jmp ipl
    11                                  	;------------------
    12                                  	;BPB(BIOS Parameter Block)
    13                                  	;------------------
    14 00000002 90<rept>                	times 90 -($-$$) db 0x90
    15                                  
    16                                  	;----------------------------
    17                                  	;IPL(Initial Pragram Loader)
    18                                  	;----------------
    19                                  ipl:
    20 0000005A FA                      	cli ;//Á¶ÅÊ≠¢‰∏≠Êñ≠
    21                                  
    22 0000005B B80000                  	mov ax,0x0000
    23 0000005E 8ED8                    	mov ds , ax        ;//Â∞ÜÊÆµÂØÑÂ≠òÂô®ÈÉΩÂÖàËÆæÁΩÆ‰∏∫0
    24 00000060 8EC0                    	mov es , ax
    25 00000062 8ED0                    	mov ss , ax
    26 00000064 BC007C                  	mov sp , BOOT_LOAD   ;//Â∞ÜÊ†àÂ∫ïËÆæÁΩÆ‰∏∫bootÁ®ãÂ∫èÂºÄÂßãÁöÑÂú∞Êñπ
    27                                  
    28 00000067 FB                      	sti ;//ÂÖÅËÆ∏‰∏≠Êñ≠
    29                                  
    30 00000068 8816[B800]              	mov [BOOT + drive.no], dl;//dlÊòØ‰øùÂ≠òÂêØÂä®Á®ãÂ∫èÁöÑÂ§ñÈÉ®ËÆæÂ§áÁöÑÂ∫èÂè∑
    31                                  
    32 0000006C 68[9900]E84E0083C4-     	cdecl puts,.s0
    32 00000074 02                 
    33                                  
    34                                  	;-------------------
    35                                  	;ËØªÂèñÊé•‰∏ãÊù•ÊâÄÊúâÁöÑsector
    36                                  	;-------------------
    37                                  	
    38 00000075 BB0F00                  	mov bx,BOOT_SECT-1
    39 00000078 B9007E                  	mov cx,BOOT_LOAD + SECT_SIZE
    40                                  
    41 0000007B 515368[B800]E89B00-     	cdecl read_chs,BOOT,bx,cx   ;AX = read_chs(.chs,bx,cx)
    41 00000083 83C406             
    42                                  
    43 00000086 39D8                    	cmp ax,bx    ;//if(AX != Ââ©‰∏ãÁöÑsectorÊï∞)
    44 00000088 740C                    .10Q: jz .10E
    45 0000008A 68[A600]E8300083C4-     .10T: cdecl puts, .e0 ;//ÂèëÁîüÈîôËØØ
    45 00000092 02                 
    46 00000093 E84900                  	call reboot      ;//ÈáçÂêØ
    47                                  
    48                                  .10E:
    49 00000096 E9CD05                  	jmp stage_2    ;//ÂêØÂä®Á®ãÂ∫èÁ¨¨‰∫å‰ΩçÁΩÆ
    50                                  
    51 00000099 426F6F74696E672E2E-     .s0 db "Booting...",0x0A,0x0D,0 ;//0x0AÊòØ‰∏ã‰∏ÄË°å,0x0DÊòØÂ∞ÜkernelÁßªÂà∞ÊúÄÂ∑¶Á´Ø,0‰ª£Ë°®Â≠óÁ¨¶‰∏≤ÁöÑÁªàÁªì
    51 000000A2 2E0A0D00           
    52 000000A6 4572726F723A736563-     .e0 db "Error:sector read",0 ;//ÈîôËØØ‰ø°ÊÅØ
    52 000000AF 746F72207265616400 
    53                                  
    54                                  ;*******************
    55                                  ;ÂêØÂä®È©±Âä®‰ø°ÊÅØ
    56                                  ;*******************
    57                                  ALIGN 2, db 0
    58                                  BOOT:
    59                                  	istruc drive
    60 000000B8 0000                    		at drive.no, dw 0
    61 000000BA 0000                    		at drive.cyln, dw 0
    62 000000BC 0000                    		at drive.head, dw 0
    63 000000BE 0200                    		at drive.sect, dw 2
    64                                  	iend
    65                                  
    66                                  ;**********************
    67                                  ;module
    68                                  ;***********************
    69                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C0 55                  <1> 	push bp
     3 000000C1 89E5                <1> 	mov bp,sp
     4                              <1> 
     5 000000C3 50                  <1> 	push ax
     6 000000C4 53                  <1> 	push bx
     7 000000C5 56                  <1> 	push si
     8                              <1> 
     9                              <1> 	;**************
    10                              <1> 	;»°µ√◊÷∑˚¥Æµƒø™ ºµÿ÷∑
    11                              <1> 	;**************
    12 000000C6 8B7604              <1> 	mov si,[bp+4]
    13                              <1> 
    14 000000C9 B40E                <1> 	mov ah,0x0E
    15 000000CB BB0000              <1> 	mov bx,0x0000
    16 000000CE FC                  <1> 	cld    ;//DF = 0 µÿ÷∑µ›‘ˆ
    17                              <1> 
    18                              <1> .10L:
    19                              <1> 	
    20 000000CF AC                  <1> 	lodsb ;//AL = *SI++
    21                              <1> 
    22 000000D0 3C00                <1> 	cmp al,0	;//if(AL == 0)
    23 000000D2 7404                <1> 	je	.10E	;//breal
    24                              <1> 
    25 000000D4 CD10                <1> 	int 0x10
    26 000000D6 EBF7                <1> 	jmp .10L
    27                              <1> .10E:
    28                              <1> 
    29 000000D8 5E                  <1> 	pop si
    30 000000D9 5B                  <1> 	pop bx
    31 000000DA 58                  <1> 	pop ax
    32                              <1> 
    33 000000DB 89EC                <1> 	mov sp,bp
    34 000000DD 5D                  <1> 	pop bp
    35                              <1> 
    36 000000DE C3                  <1> 	ret
    70                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 	;---------------------
     3                              <1> 	;±Ì æ÷ÿ∆Ù–≈œ¢
     4                              <1> 	;--------------------
     5 000000DF 68[FB00]E8DBFF83C4- <1> 	cdecl puts, .s0
     5 000000E7 02                  <1>
     6                              <1> 
     7                              <1> 	;-----------------
     8                              <1> 	;µ»¥˝ ‰»Î
     9                              <1> 	;-----------------
    10                              <1> 
    11                              <1> .10L:
    12                              <1> 	
    13 000000E8 B410                <1> 	mov ah,0x10
    14 000000EA CD16                <1> 	int 0x16
    15                              <1> 
    16 000000EC 3C00                <1> 	cmp al,''  ;//»Áπ˚ª∫≥Â«¯”– ˝æ›,µ»¥˝”√ªß ‰»Îªÿ≥µ
    17 000000EE 75F8                <1> 	jne .10L  
    18                              <1> 
    19                              <1> 	;------------------------------
    20                              <1> 	;ªª––
    21                              <1> 	;-----------------------------
    22                              <1> 
    23 000000F0 68[1901]E8CAFF83C4- <1> 	cdecl puts, .s1
    23 000000F8 02                  <1>
    24                              <1> 
    25 000000F9 CD19                <1> 	int 0x19 ;//÷ÿ∆Ù
    26                              <1> 
    27 000000FB 0A0D50555348205350- <1> .s0 db 0x0A,0x0D,"PUSH SPACE key to reboot...",0x0A
    27 00000104 414345206B65792074- <1>
    27 0000010D 6F207265626F6F742E- <1>
    27 00000116 2E2E0A              <1>
    28 00000119 0A0D0A0D00          <1> .s1 db 0x0A,0x0D,0x0A,0x0D,0
    71                                  %include "../modules/real/read_chs.s"
     1                              <1> read_chs:	
     2                              <1> 			; +8 ∏¥÷∆µƒƒøµƒµÿ
     3                              <1> 			; +6 sector ˝
     4                              <1> 			; +4 parameter  buffer
     5 0000011E 55                  <1> 	push bp
     6 0000011F 89E5                <1> 	mov bp,sp
     7 00000121 6A03                <1> 	push 3 ;//÷ÿ ‘µƒ¥Œ ˝
     8 00000123 6A00                <1> 	push 0 ;//∂¡»Îµƒsector ˝
     9                              <1> 
    10 00000125 53                  <1> 	push bx
    11 00000126 51                  <1> 	push cx
    12 00000127 52                  <1> 	push dx
    13 00000128 06                  <1> 	push es
    14 00000129 56                  <1> 	push si
    15                              <1> 
    16 0000012A 8B7604              <1> 	mov si,[bp+4]    ;SI = SRCª∫¥Ê
    17                              <1> 
    18                              <1> 	;------------------
    19                              <1> 	;CXºƒ¥Ê∆˜µƒ…Ë∂®
    20                              <1> 	;------------------
    21 0000012D 8A6C02              <1> 	mov ch,[si + drive.cyln+0]  ;//ch = cylinder∫≈
    22 00000130 8A4C03              <1> 	mov cl,[si + drive.cyln+1]  ;//cl = cylinder∫≈
    23 00000133 C0E106              <1> 	shl cl,6 ;// ch << 6  ˝æ›œÚ◊Ó∏ﬂŒª∂‘∆Î(cylinder∫≈10Œª)
    24 00000136 0A4C06              <1> 	or cl,[si + drive.sect]    ;//Ω´6Œªµƒsector∫≈…Ë÷√µΩcxºƒ¥Ê∆˜µƒµÕ¡˘Œª
    25                              <1> 
    26                              <1> 	;--------------------
    27                              <1> 	;∂¡»°sector
    28                              <1> 	;---------------------
    29 00000139 8A7404              <1> 	mov dh,[si + drive.head] ;//head∫≈
    30 0000013C 8A14                <1> 	mov dl,[si+0];         ;//«˝∂Ø∫≈
    31 0000013E B80000              <1> 	mov ax,0x0000        
    32 00000141 8EC0                <1> 	mov es,ax
    33 00000143 8B5E08              <1> 	mov bx,[bp+8]      ;//∏¥÷∆µƒƒøµƒµÿ
    34                              <1> .10L:
    35                              <1> 	
    36 00000146 B402                <1> 	mov ah,0x02     ;//∂¡»°sectorµƒ√¸¡Ó
    37 00000148 8A4606              <1> 	mov al,[bp+6] ;//sector ˝
    38                              <1> 
    39 0000014B CD13                <1> 	int 0X13
    40 0000014D 7304                <1> 	jnc .11E		;//»Áπ˚CF±ª…Ë÷√¡À
    41 0000014F B000                <1> 	mov al,0		;//al = 0
    42 00000151 EB0C                <1> 	jmp .10E
    43                              <1> 
    44                              <1> .11E:
    45                              <1> 
    46 00000153 3C00                <1> 	cmp al,0		
    47 00000155 7508                <1> 	jne .10E  ;//»Áπ˚”–∂¡µΩsector,‘Ú’˝≥£‘À––,∑Ò◊ﬂ÷ÿ ‘
    48                              <1> 
    49 00000157 B80000              <1> 	mov ax,0
    50 0000015A FF4EFE              <1> 	dec word[bp-2]
    51 0000015D 75E7                <1> 	jnz .10L
    52                              <1> .10E:
    53 0000015F B400                <1> 	mov ah,0
    54                              <1> 
    55 00000161 5E                  <1> 	pop si
    56 00000162 07                  <1> 	pop es
    57 00000163 5A                  <1> 	pop dx
    58 00000164 59                  <1> 	pop cx
    59 00000165 5B                  <1> 	pop bx
    60                              <1> 
    61 00000166 89EC                <1> 	mov sp,bp
    62 00000168 5D                  <1> 	pop bp
    63 00000169 C3                  <1> 	ret
    64                              <1> 
    65                              <1> 
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1> 
    72                                  ;******************
    73                                  ;boot_flag
    74                                  ;*******************
    75 0000016A 00<rept>                	times 510 -($-$$) db 0x00
    76 000001FE 55AA                    	db 0x55,0xAA
    77                                  
    78                                  ;*********************
    79                                  ;bootÂ§ÑÁêÜÁöÑÁ¨¨‰∫åÈò∂ÊÆµ
    80                                  ;*********************
    81                                  
    82                                  FONT:
    83 00000200 0000                    .seg dw 0
    84 00000202 0000                    .off dw 0
    85                                  ACPI_DATA:
    86 00000204 00000000                .adr dd 0		;ACPI data address
    87 00000208 00000000                .len dd 0		;ACPI data length
    88                                  
    89                                  ;********************
    90                                  ;modules
    91                                  ;********************
    92                                  %include "..\modules\real\itoa.s"
     1                              <1> itoa:
     2                              <1> 		;	+12|∑˚∫≈
     3                              <1> 		;	+10|ª˘ ˝
     4                              <1> 		;	+8 |ª∫¥Êµƒ¥Û–°
     5                              <1> 		;	+6 |ª∫¥Êµƒµÿ÷∑
     6                              <1> 		;	+4 | ˝÷µ
     7                              <1> 		;	+2 |IP (∑µªÿµÿ÷∑)
     8                              <1> 		; BP+0 | ‘≠¿¥µƒBP
     9                              <1> 
    10 0000020C 55                  <1> 	push bp
    11 0000020D 89E5                <1> 	mov bp,sp
    12                              <1> 
    13 0000020F 50                  <1> 	push ax
    14 00000210 53                  <1> 	push bx
    15 00000211 51                  <1> 	push cx
    16 00000212 52                  <1> 	push dx
    17 00000213 56                  <1> 	push si
    18 00000214 57                  <1> 	push di
    19                              <1> 
    20                              <1> 
    21 00000215 8B4604              <1> 	mov ax,[bp + 4] ;//ax =  ˝÷µ
    22 00000218 8B7606              <1> 	mov si,[bp + 6] ;//si = ª∫¥Êµÿ÷∑
    23 0000021B 8B4E08              <1> 	mov cx,[bp + 8] ;//cx = ª∫¥Êµÿ÷∑»›¡ø
    24 0000021E 89F7                <1> 	mov di , si	  ;//di = ª∫¥Êµƒ◊Ó∫Û
    25 00000220 01CF                <1> 	add di , cx
    26 00000222 4F                  <1> 	dec di
    27                              <1> 
    28 00000223 8B5E0C              <1> 	mov bx,word[bp+12] ;//bx = flag
    29                              <1> 
    30                              <1> 	;--------------
    31                              <1> 	;≈–∂œ «∑Ò «”–∑˚∫≈ ˝
    32                              <1> 	;--------------
    33 00000226 F7C30100            <1> 	test bx,0b0001   ;//(bx&0x01) »Áπ˚◊Ó∫Û“ªŒª «1,Àµ√˜ «¥¯∑˚∫≈µƒ
    34 0000022A 7408                <1> .10Q: je .10E       
    35 0000022C 83F800              <1> 	 cmp ax,0        ;//»Áπ˚ ax < 0
    36 0000022F 7D03                <1> .12Q: jge  .12E
    37 00000231 83CB02              <1> 	or   bx,0b0010  ;//±Ì æ∑˚∫≈
    38                              <1> .12E:
    39                              <1> .10E:
    40                              <1> 
    41                              <1> 
    42                              <1> 	;-------------------
    43                              <1> 	;≈–∂® ‰≥ˆ ≤√¥∑˚∫≈
    44                              <1> 	;--------------------
    45 00000234 F7C30200            <1> 	test bx,0b0010 ;//(bx&0x02) »Áπ˚ «≤ª «0,‘ÚÀµ√˜–Ë“™…Ë÷√∑˚∫≈
    46 00000238 7410                <1> .20Q: je .20E
    47 0000023A 83F800              <1> 	 cmp ax,0
    48 0000023D 7D07                <1> .22Q: jge .22F
    49 0000023F F7D8                <1> 	neg ax
    50 00000241 C6042D              <1> 	mov [si],byte'-'
    51 00000244 EB03                <1> 	jmp .22E
    52                              <1> .22F:
    53                              <1> 
    54 00000246 C6042B              <1> 	mov  [si],byte'+'
    55                              <1> .22E:
    56 00000249 49                  <1> 	dec cx   ;//size--
    57                              <1> 
    58                              <1> .20E:
    59                              <1> 
    60                              <1> 	;---------------------
    61                              <1> 	;ASCII±‰ªª
    62                              <1> 	;--------------------
    63 0000024A 8B5E0A              <1> 	mov bx,[bp+10] ;//BX = ª˘ ˝
    64                              <1> .30L:
    65                              <1> 	
    66 0000024D BA0000              <1> 	mov dx,0
    67 00000250 F7F3                <1> 	div bx      ;//dx = AX%ª˘ ˝
    68                              <1> 				;//ax = AX/ª˘ ˝
    69 00000252 89D6                <1> 	mov si,dx
    70 00000254 8A94[7C02]          <1> 	mov dl,byte[.ascii+si] ;//dl = ASCII[DX]
    71                              <1> 
    72 00000258 8815                <1> 	mov [di],dl  ;//*dst = dl
    73                              <1> 
    74 0000025A 4F                  <1> 	dec di		; dst--;
    75                              <1> 
    76 0000025B 83F800              <1> 	cmp ax,0             ;
    77 0000025E E0ED                <1> 	loopnz .30L   ;//while(ax)
    78                              <1> .30E:
    79                              <1> 	
    80                              <1> 	;-------------------
    81                              <1> 	;ÃÓ¬˙ªªª∫¥Ê £”‡ø’∏Ò
    82                              <1> 	;-------------------
    83                              <1> 
    84 00000260 83F900              <1> 	cmp cx,0  ;//»Áπ˚√ª”–ª∫¥Ê £”‡‘ÚÕÍ≥…
    85 00000263 740D                <1> .40Q: je   .40E
    86 00000265 B020                <1> 	  mov  al,' ' ;//ø’◊÷∑˚ÃÓ≥‰
    87 00000267 837E0C04            <1> 	  cmp [bp+12],word 0b0100 
    88 0000026B 7502                <1> .42Q jne .42E
    89 0000026D B030                <1> 	 mov al,'0'  ;// ”√0ÃÓ≥‰
    90                              <1> .42E:
    91 0000026F FD                  <1> 	std       ;//DF = 1 (µÿ÷∑µ›ºı)
    92 00000270 F3AA                <1> 	rep stosb    ;//while(--CX) *DI-- = al;
    93                              <1> .40E:
    94                              <1> 
    95 00000272 5F                  <1> 	pop di
    96 00000273 5E                  <1> 	pop si
    97 00000274 5A                  <1> 	pop dx
    98 00000275 59                  <1> 	pop cx
    99 00000276 5B                  <1> 	pop bx
   100 00000277 58                  <1> 	pop ax
   101                              <1> 
   102 00000278 89EC                <1> 	mov sp,bp
   103 0000027A 5D                  <1> 	pop bp
   104                              <1> 
   105 0000027B C3                  <1> 	ret
   106                              <1> 
   107 0000027C 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   107 00000285 39414243444546      <1>
    93                                  %include "..\modules\real\get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1> 	
     3                              <1> 
     4                              <1> 
     5 0000028C 55                  <1> 	push bp
     6 0000028D 89E5                <1> 	mov bp,sp
     7                              <1> 
     8                              <1> 
     9 0000028F 53                  <1> 	push bx
    10 00000290 51                  <1> 	push cx
    11 00000291 06                  <1> 	push es
    12 00000292 56                  <1> 	push si
    13 00000293 57                  <1> 	push di
    14                              <1> 
    15                              <1> 
    16                              <1> 
    17 00000294 8B7604              <1> 	mov si,[bp+4]
    18                              <1> 
    19 00000297 B80000              <1> 	mov ax,0   ;//Disk Base Table Pointer§Œ≥ı∆⁄ªØ
    20 0000029A 8EC0                <1> 	mov es,ax
    21 0000029C 89C7                <1> 	mov di,ax  
    22                              <1> 
    23 0000029E B408                <1> 	mov ah,8 ;//»°µ√drive parameters
    24 000002A0 8A14                <1> 	mov dl,[si+drive.no] ;//dl = drive∫≈
    25 000002A2 CD13                <1> 	int 0x13
    26 000002A4 721B                <1> .10Q: jc   .10F
    27                              <1> .10T:
    28 000002A6 88C8                <1> 	mov al,cl
    29 000002A8 83E03F              <1> 	and ax,0x3F ;//◊ÓµÕ¡˘Œª
    30                              <1> 
    31 000002AB C0E906              <1> 	shr  cl,6;    CX = cylinder ˝
    32 000002AE C1C908              <1> 	ror cx,8;	
    33 000002B1 41                  <1> 	inc cx ;	cylinder¥”1º∆ ˝
    34                              <1> 
    35 000002B2 0FB6DE              <1> 	movzx bx,dh     ;bx = head ˝
    36 000002B5 43                  <1> 	inc bx			
    37                              <1> 
    38 000002B6 894C02              <1> 	mov  [si+drive.cyln],cx
    39 000002B9 895C04              <1> 	mov  [si+drive.head],bx
    40 000002BC 894406              <1> 	mov  [si+drive.sect],ax
    41                              <1> 
    42 000002BF EB03                <1> 	jmp .10E
    43                              <1> .10F:
    44 000002C1 B80000              <1> 	mov ax,0
    45                              <1> .10E:
    46 000002C4 5F                  <1> 	pop di
    47 000002C5 5E                  <1> 	pop si
    48 000002C6 07                  <1> 	pop es
    49 000002C7 59                  <1> 	pop cx
    50 000002C8 5B                  <1> 	pop bx
    51                              <1> 
    52 000002C9 89EC                <1> 	mov sp,bp
    53 000002CB 5D                  <1> 	pop bp
    54                              <1> 
    55 000002CC C3                  <1> 	ret
    94                                  %include "..\modules\real\get_font_adr.s"
     1                              <1> get_font_adr:
     2                              <1> 	
     3 000002CD 55                  <1> 	push bp
     4 000002CE 89E5                <1> 	mov bp,sp
     5                              <1> 
     6 000002D0 50                  <1> 	push ax
     7 000002D1 53                  <1> 	push bx
     8 000002D2 56                  <1> 	push si
     9 000002D3 06                  <1> 	push es
    10 000002D4 55                  <1> 	push bp
    11                              <1> 
    12                              <1> 
    13 000002D5 8B7604              <1> 	mov si,[bp + 4]
    14                              <1> 
    15 000002D8 B83011              <1> 	mov ax,0x1130 ;//ªÒ»°font address 
    16 000002DB B706                <1> 	mov bh,0x06	  ;//8x16
    17 000002DD CD10                <1> 	int 10h       ;//±£¥Ê‘⁄ES:BP÷–
    18                              <1> 
    19                              <1> 	;//±£¥Êfont address
    20 000002DF 8C04                <1> 	mov [si + 0],es
    21 000002E1 896C02              <1> 	mov [si + 2],bp
    22                              <1> 
    23 000002E4 5D                  <1> 	pop		bp
    24 000002E5 07                  <1> 	pop		es
    25 000002E6 5E                  <1> 	pop		si
    26 000002E7 5B                  <1> 	pop		bx
    27 000002E8 58                  <1> 	pop		ax
    28                              <1> 
    29 000002E9 89EC                <1> 	mov sp,bp
    30 000002EB 5D                  <1> 	pop bp
    31                              <1> 
    32 000002EC C3                  <1> 	ret
    95                                  %include "..\modules\real\get_mem_info.s"
     1                              <1> get_mem_info:
     2 000002ED 6650                <1> 	push eax
     3 000002EF 6653                <1> 	push ebx
     4 000002F1 6651                <1> 	push ecx
     5 000002F3 6652                <1> 	push edx
     6 000002F5 56                  <1> 	push si
     7 000002F6 57                  <1> 	push di
     8 000002F7 55                  <1> 	push bp
     9                              <1> 
    10 000002F8 68[8303]E8C2FD83C4- <1> 	cdecl puts,.s0
    10 00000300 02                  <1>
    11                              <1> 
    12 00000301 BD0000              <1> 	mov bp,0			;//lines = 0
    13 00000304 66BB00000000        <1> 	mov ebx,0			;//index = 0
    14                              <1> 
    15                              <1> .10L:
    16                              <1> 	;//cdecl puts,.s0
    17 0000030A 66B820E80000        <1> 	mov eax,0x0000E820
    18 00000310 66B914000000        <1> 	mov ecx,E820_RECORD_SIZE ;//ECX = –Ë“™µƒbyte ˝
    19 00000316 66BA50414D53        <1> 	mov edx, 'PAMS' ;//EDX = 'SMAP'
    20 0000031C BF[1004]            <1> 	mov di,.b0      ;//ES:DI = buffer
    21 0000031F CD15                <1> 	int 0x15
    22                              <1> 
    23 00000321 663D50414D53        <1> 	cmp eax,'PAMS'
    24 00000327 7402                <1> 	je     .12E
    25 00000329 EB4C                <1> 	jmp    .10E	;//»Áπ˚≤ª÷ß≥÷SMAP‘ÚÕÀ≥ˆ
    26                              <1> 
    27                              <1> .12E:
    28                              <1> 
    29 0000032B 7302                <1> 	jnc .14E	;//»Áπ˚≥ˆŒ Ã‚¡ÀCFª·±ªset
    30 0000032D EB48                <1> 	jmp .10E	
    31                              <1> 
    32                              <1> .14E:
    33                              <1> 	
    34 0000032F 57E8F10083C402      <1> 	cdecl put_mem_info, di	;//¥Ú”°–≈œ¢
    35                              <1> 
    36 00000336 668B4510            <1> 	mov eax,[di + 16]		;//eax = record type 
    37 0000033A 6683F803            <1> 	cmp eax,3				;//if(3 == eax) ACPI data
    38 0000033E 750F                <1> 	jne .15E
    39                              <1> 
    40 00000340 668B05              <1> 	mov eax,[di + 0]		; EAX = BASE ADDRESS
    41 00000343 66A3[0402]          <1> 	mov [ACPI_DATA.adr],eax ; ACPI_DATA.adr = EAX
    42                              <1> 
    43 00000347 668B4508            <1> 	mov eax,[di + 8]		;EAX = length
    44 0000034B 66A3[0802]          <1> 	mov [ACPI_DATA.len],eax ; ACPI_DATA.len = EAX
    45                              <1> .15E:
    46 0000034F 6683FB00            <1> 	cmp ebx,0			;//if(ebx != 0)
    47 00000353 741C                <1> 	jz .16E
    48                              <1> 
    49 00000355 45                  <1> 	inc bp
    50 00000356 83E507              <1> 	and bp,0x07			;//line√ø8∏ˆ√¸¡Ó–Ë“™”√ªß∞¥œ¬ªÿ≥µºÃ–¯
    51 00000359 7516                <1> 	jnz .16E			;//if(lines == 0)	inc bp				;//lines++
    52                              <1> 
    53                              <1> 
    54 0000035B 68[F603]E85FFD83C4- <1> 	cdecl puts,.s2		;//÷–∂œ√¸¡Ó
    54 00000363 02                  <1>
    55                              <1> 
    56 00000364 B410                <1> 	mov ah,0x10			;//µ»¥˝keyboard ‰»Î
    57 00000366 CD16                <1> 	int 0x16
    58                              <1> 
    59 00000368 68[0104]E852FD83C4- <1> 	cdecl puts,.s3		;//…æ≥˝÷–∂œ–≈œ¢
    59 00000370 02                  <1>
    60                              <1> 
    61                              <1> .16E:
    62 00000371 6683FB00            <1> 	cmp ebx,0
    63 00000375 7593                <1> 	jne .10L
    64                              <1> .10E:
    65 00000377 5D                  <1> 	pop bp
    66 00000378 5F                  <1> 	pop di
    67 00000379 5E                  <1> 	pop si
    68 0000037A 665A                <1> 	pop edx
    69 0000037C 6659                <1> 	pop ecx
    70 0000037E 665B                <1> 	pop ebx
    71 00000380 6658                <1> 	pop eax
    72 00000382 C3                  <1> 	ret;
    73                              <1> 
    74 00000383 2045383230204D656D- <1> .s0:	db " E820 Memory Map:", 0x0A, 0x0D
    74 0000038C 6F7279204D61703A0A- <1>
    74 00000395 0D                  <1>
    75 00000396 20426173655F5F5F5F- <1> 		db " Base_____________ Length___________ Type____", 0x0A, 0x0D, 0
    75 0000039F 5F5F5F5F5F5F5F5F5F- <1>
    75 000003A8 204C656E6774685F5F- <1>
    75 000003B1 5F5F5F5F5F5F5F5F5F- <1>
    75 000003BA 20547970655F5F5F5F- <1>
    75 000003C3 0A0D00              <1>
    76 000003C6 202D2D2D2D2D2D2D2D- <1> .s1:	db " ----------------- ----------------- --------", 0x0A, 0x0D, 0
    76 000003CF 2D2D2D2D2D2D2D2D2D- <1>
    76 000003D8 202D2D2D2D2D2D2D2D- <1>
    76 000003E1 2D2D2D2D2D2D2D2D2D- <1>
    76 000003EA 202D2D2D2D2D2D2D2D- <1>
    76 000003F3 0A0D00              <1>
    77 000003F6 203C6D6F72652E2E2E- <1> .s2:	db " <more...>", 0
    77 000003FF 3E00                <1>
    78 00000401 0D2020202020202020- <1> .s3:	db 0x0D, "          ", 0x0D, 0
    78 0000040A 20200D00            <1>
    79                              <1> 
    80 0000040E 00<rept>            <1> ALIGN 4, db 0
    81 00000410 00<rept>            <1> .b0:	times E820_RECORD_SIZE db 0
    82                              <1> 
    83                              <1> put_mem_info:
    84 00000424 55                  <1> 	push bp
    85 00000425 89E5                <1> 	mov bp,sp
    86                              <1> 
    87 00000427 53                  <1> 	push bx
    88 00000428 56                  <1> 	push si
    89                              <1> 
    90                              <1> 	;----------------
    91                              <1> 	;ªÒµ√≤Œ ˝
    92                              <1> 	;----------------
    93 00000429 8B7604              <1> 	mov si,[bp + 4] ;//buffer_address
    94                              <1> 	;Base(64bit)
    95 0000042C 6A046A106A0468-     <1> 	cdecl itoa,word[si + 6],.p2+0,4,16,0b0100
    95 00000433 [0305]FF7406E8D1FD- <1>
    95 0000043B 83C40A              <1>
    96 0000043E 6A046A106A0468-     <1> 	cdecl itoa,word[si + 4],.p2+4,4,16,0b0100
    96 00000445 [0705]FF7404E8BFFD- <1>
    96 0000044D 83C40A              <1>
    97 00000450 6A046A106A0468-     <1> 	cdecl itoa,word[si + 2],.p3+0,4,16,0b0100
    97 00000457 [0C05]FF7402E8ADFD- <1>
    97 0000045F 83C40A              <1>
    98 00000462 6A046A106A0468-     <1> 	cdecl itoa,word[si + 0],.p3+4,4,16,0b0100
    98 00000469 [1005]FF34E89CFD83- <1>
    98 00000471 C40A                <1>
    99                              <1> 	;Length(64bit)
   100 00000473 6A046A106A0468-     <1> 	cdecl itoa,word[si + 14],.p4+0,4,16,0b0100
   100 0000047A [1505]FF740EE88AFD- <1>
   100 00000482 83C40A              <1>
   101 00000485 6A046A106A0468-     <1> 	cdecl itoa,word[si + 12],.p4+4,4,16,0b0100
   101 0000048C [1905]FF740CE878FD- <1>
   101 00000494 83C40A              <1>
   102 00000497 6A046A106A0468-     <1> 	cdecl itoa,word[si + 10],.p5+0,4,16,0b0100
   102 0000049E [1E05]FF740AE866FD- <1>
   102 000004A6 83C40A              <1>
   103 000004A9 6A046A106A0468-     <1> 	cdecl itoa,word[si + 8] ,.p5+4,4,16,0b0100
   103 000004B0 [2205]FF7408E854FD- <1>
   103 000004B8 83C40A              <1>
   104                              <1> 	;Type(32bit)
   105 000004BB 6A046A106A0468-     <1> 	cdecl itoa,word[si + 18],.p4+0,4,16,0b0100
   105 000004C2 [1505]FF7412E842FD- <1>
   105 000004CA 83C40A              <1>
   106 000004CD 6A046A106A0468-     <1> 	cdecl itoa,word[si + 16],.p4+0,4,16,0b0100
   106 000004D4 [1505]FF7410E830FD- <1>
   106 000004DC 83C40A              <1>
   107                              <1> 
   108 000004DF 68[0205]E8DBFB83C4- <1> 	cdecl puts,.s1 ;//œ‘ ærecord–≈œ¢
   108 000004E7 02                  <1>
   109                              <1> 
   110                              <1> 
   111 000004E8 8B5C10              <1> mov bx,[si+16]			;//typeµƒ◊÷∑˚¥Æ±Ì æ
   112 000004EB 83E307              <1> and bx,0x07				;BX = Type(0~5)
   113 000004EE D1E3                <1> shl bx,1				;BX *= 2
   114 000004F0 81C3[8405]          <1> add bx,.t0				;BX += .t0 ;//º”…œtableµƒµÿ÷∑
   115 000004F4 FF37E8C7FB83C402    <1> cdecl puts,word[bx]
   116                              <1> 
   117 000004FC 5E                  <1> pop si
   118 000004FD 5B                  <1> pop bx
   119                              <1> 
   120 000004FE 89EC                <1> mov sp,bp
   121 00000500 5D                  <1> pop bp
   122                              <1> 
   123 00000501 C3                  <1> ret;
   124                              <1> 
   125 00000502 20                  <1> .s1:	db " "
   126 00000503 5A5A5A5A5A5A5A5A5F  <1> .p2:	db "ZZZZZZZZ_"
   127 0000050C 5A5A5A5A5A5A5A5A20  <1> .p3:	db "ZZZZZZZZ "
   128 00000515 5A5A5A5A5A5A5A5A5F  <1> .p4:	db "ZZZZZZZZ_"
   129 0000051E 5A5A5A5A5A5A5A5A20  <1> .p5:	db "ZZZZZZZZ "
   130 00000527 5A5A5A5A5A5A5A5A00  <1> .p6:	db "ZZZZZZZZ",0
   131                              <1> 
   132 00000530 2028556E6B6E6F776E- <1> .s4:	db " (Unknown)", 0x0A, 0x0D, 0
   132 00000539 290A0D00            <1>
   133 0000053D 2028757361626C6529- <1> .s5:	db " (usable)", 0x0A, 0x0D, 0
   133 00000546 0A0D00              <1>
   134 00000549 202872657365727665- <1> .s6:	db " (reserved)", 0x0A, 0x0D, 0
   134 00000552 64290A0D00          <1>
   135 00000557 202841435049206461- <1> .s7:	db " (ACPI data)", 0x0A, 0x0D, 0
   135 00000560 7461290A0D00        <1>
   136 00000566 202841435049204E56- <1> .s8:	db " (ACPI NVS)", 0x0A, 0x0D, 0
   136 0000056F 53290A0D00          <1>
   137 00000574 2028626164206D656D- <1> .s9:	db " (bad memory)", 0x0A, 0x0D, 0
   137 0000057D 6F7279290A0D00      <1>
   138                              <1> 
   139 00000584 [3005][3D05][4905]- <1> .t0:	dw .s4, .s5, .s6, .s7, .s8, .s9, .s4, .s4
   139 0000058A [5705][6605][7405]- <1>
   139 00000590 [3005][3005]        <1>
    96                                  %include "..\modules\real\kbc.s"
     1                              <1> KBC_Data_Write:
     2                              <1> 
     3 00000594 55                  <1> 		push	bp								
     4 00000595 89E5                <1> 		mov		bp, sp							
     5                              <1> 
     6                              <1> 	
     7 00000597 51                  <1> 		push	cx
     8                              <1> 
     9 00000598 B90000              <1> 		mov		cx, 0							; CX = 0; 
    10                              <1> .10L:											; do
    11                              <1> 												; {
    12 0000059B E464                <1> 		in		al, 0x64						;   AL = inp(0x64);
    13 0000059D A802                <1> 		test    al, 0x02						;   ZF = AL & 0x02;
    14 0000059F E0FA                <1> 		loopnz	.10L							; } while (--CX && !ZF);
    15                              <1> 												; 
    16 000005A1 83F900              <1> 		cmp		cx, 0							; if (CX)
    17 000005A4 7405                <1> 		jz		.20E							; {
    18                              <1> 												;   
    19 000005A6 8A4604              <1> 		mov		al, [bp + 4]					; 
    20 000005A9 E660                <1> 		out    	0x60, al						;   outp(0x60, AL);
    21                              <1> .20E:											; }
    22                              <1> 												; 
    23 000005AB 89C8                <1> 		mov		ax, cx							; return CX;
    24                              <1> 
    25 000005AD 59                  <1> 		pop		cx
    26                              <1> 
    27 000005AE 89EC                <1> 		mov		sp, bp
    28 000005B0 5D                  <1> 		pop		bp
    29                              <1> 
    30 000005B1 C3                  <1> 		ret
    31                              <1> 
    32                              <1> 
    33                              <1> KBC_Data_Read:
    34                              <1> 	
    35                              <1> 												
    36 000005B2 55                  <1> 		push	bp								
    37 000005B3 89E5                <1> 		mov		bp, sp							
    38                              <1> 
    39                              <1> 	
    40 000005B5 51                  <1> 		push	cx
    41 000005B6 57                  <1> 		push	di
    42                              <1> 
    43                              <1> 	
    44 000005B7 B90000              <1> 		mov		cx, 0							; CX = 0;
    45                              <1> .10L:											; do
    46                              <1> 												; {
    47 000005BA E464                <1> 		in		al, 0x64						;   AL = inp(0x64);
    48 000005BC A801                <1> 		test    al, 0x01						;   ZF = AL & 0x01; 
    49 000005BE E1FA                <1> 		loopz	.10L							; } while (--CX && ZF);
    50                              <1> 												;   
    51 000005C0 83F900              <1> 		cmp		cx, 0							; if (CX) 
    52 000005C3 7409                <1> 		jz		.20E							; {
    53                              <1> 												;   
    54 000005C5 B400                <1> 		mov		ah, 0x00						;   AH = 0x00;
    55 000005C7 E460                <1> 		in     	al, 0x60						;   AL = inp(0x60);
    56                              <1> 												;   
    57 000005C9 8B7E04              <1> 		mov		di, [bp + 4]					;   DI    = adr;
    58 000005CC 8905                <1> 		mov		[di + 0], ax					;   DI[0] = AX;
    59                              <1> .20E:											; }
    60                              <1> 												; 
    61 000005CE 89C8                <1> 		mov		ax, cx							; return CX;
    62                              <1> 
    63                              <1> 	
    64 000005D0 5F                  <1> 		pop		di
    65 000005D1 59                  <1> 		pop		cx
    66                              <1> 
    67                              <1> 
    68 000005D2 89EC                <1> 		mov		sp, bp
    69 000005D4 5D                  <1> 		pop		bp
    70                              <1> 
    71 000005D5 C3                  <1> 		ret
    72                              <1> 
    73                              <1> KBC_Cmd_Write:
    74                              <1> 
    75                              <1> 												
    76                              <1> 											
    77 000005D6 55                  <1> 		push	bp							
    78 000005D7 89E5                <1> 		mov		bp, sp							
    79                              <1> 
    80                              <1> 	
    81 000005D9 51                  <1> 		push	cx
    82                              <1> 
    83                              <1> 	
    84 000005DA B90000              <1> 		mov		cx, 0							
    85                              <1> .10L:											
    86                              <1> 											
    87 000005DD E464                <1> 		in		al, 0x64					
    88 000005DF A802                <1> 		test    al, 0x02						
    89 000005E1 E0FA                <1> 		loopnz	.10L							
    90                              <1> 												
    91 000005E3 83F900              <1> 		cmp		cx, 0							
    92 000005E6 7405                <1> 		jz		.20E							
    93                              <1> 												
    94 000005E8 8A4604              <1> 		mov		al, [bp + 4]					
    95 000005EB E664                <1> 		out    	0x64, al						
    96                              <1> .20E:											
    97                              <1> 
    98 000005ED 89C8                <1> 		mov		ax, cx							
    99                              <1> 
   100 000005EF 59                  <1> 		pop		cx
   101                              <1> 
   102 000005F0 89EC                <1> 		mov		sp, bp
   103 000005F2 5D                  <1> 		pop		bp
   104                              <1> 
   105 000005F3 C3                  <1> 		ret
   106                              <1> 
    97                                  %include "..\modules\real\read_lba.s"
     1                              <1> lba_chs:
     2                              <1> 
     3 000005F4 55                  <1> 	push	bp
     4 000005F5 89E5                <1> 	mov		bp, sp
     5                              <1> 	
     6 000005F7 50                  <1> 	push	ax
     7 000005F8 53                  <1> 	push	bx
     8 000005F9 52                  <1> 	push	dx
     9 000005FA 56                  <1> 	push	si
    10 000005FB 57                  <1> 	push	di
    11                              <1> 
    12 000005FC 8B7604              <1> 	mov		si, [bp + 4] ;//si  = drive
    13 000005FF 8B7E06              <1> 	mov		di, [bp + 6] ;//di = drv_chs
    14                              <1> 
    15 00000602 8A4404              <1> 	mov al,[si + drive.head] ;//AL = maxhead
    16 00000605 F66406              <1> 	mul byte[si+drive.sect]	 ;//AL = maxhead * maxsector
    17 00000608 89C3                <1> 	mov bx,ax			;//BX = √ø∏ˆcylinderµƒsector ˝
    18                              <1> 
    19 0000060A BA0000              <1> 	mov dx,0
    20 0000060D 8B4608              <1> 	mov ax,[bp + 8]
    21 00000610 F7F3                <1> 	div bx  ;//DX = AX%BX
    22                              <1> 			;//AX = AX/BX
    23 00000612 894502              <1> 	mov [di+drive.cyln],ax   ;drv_ch.cyln = cylinder∑¨∫≈
    24                              <1> 
    25 00000615 89D0                <1> 	mov ax,dx
    26 00000617 F67406              <1> 	div byte[si + drive.sect]    ;AH = AX % maxsector
    27                              <1> 								 ;al = ax / maxsector
    28 0000061A 0FB6D4              <1> 	movzx dx , ah
    29 0000061D 42                  <1> 	inc dx
    30                              <1> 
    31 0000061E B400                <1> 	mov ah,0x00
    32                              <1> 
    33 00000620 894504              <1> 	mov [di + drive.head],ax
    34 00000623 895506              <1> 	mov [di + drive.sect],dx 
    35                              <1> 
    36 00000626 5F                  <1> 	pop di
    37 00000627 5E                  <1> 	pop si
    38 00000628 5A                  <1> 	pop dx
    39 00000629 5B                  <1> 	pop bx
    40 0000062A 58                  <1> 	pop ax
    41                              <1> 
    42 0000062B 89EC                <1> 	mov sp,bp
    43 0000062D 5D                  <1> 	pop bp
    44 0000062E C3                  <1> 	ret
    45                              <1> 
    46                              <1> read_lba:
    47                              <1> 											
    48 0000062F 55                  <1> 		push	bp							
    49 00000630 89E5                <1> 		mov		bp, sp			
    50                              <1> 
    51                              <1> 		
    52 00000632 56                  <1> 		push	si
    53                              <1> 
    54 00000633 8B7604              <1> 		mov		si, [bp + 4]					; SI = drive–≈œ¢
    55                              <1> 		;------------------
    56                              <1> 		;Ω´lba÷∏∂®±‰Œ™chs÷∏∂®
    57                              <1> 		;------------------
    58 00000636 8B4606              <1> 		mov		ax, [bp + 6]					; AX = LBA;
    59 00000639 5068[5E06]56E8B3FF- <1> 		cdecl	lba_chs, si, .chs, ax			; lba_chs(drive, .chs, AX);
    59 00000641 83C406              <1>
    60                              <1> 
    61                              <1> 		;---------------------------------------
    62                              <1> 		; drive numberµƒøΩ±¥
    63                              <1> 		;---------------------------------------
    64 00000644 8A04                <1> 		mov		al, [si + drive.no]				; 
    65 00000646 A2[5E06]            <1> 		mov		[.chs + drive.no], al			; drive number
    66                              <1> 
    67                              <1> 		;---------------------------------------
    68                              <1> 		; ∂¡»°sector
    69                              <1> 		;---------------------------------------
    70 00000649 FF760AFF760868-     <1> 		cdecl	read_chs, .chs, word [bp + 8], word [bp +10] ;AX = read_chs(.chs, sector ˝, ofs);
    70 00000650 [5E06]E8C9FA83C406  <1>
    71                              <1> 
    72 00000658 5E                  <1> 		pop		si
    73                              <1> 
    74 00000659 89EC                <1> 		mov		sp, bp
    75 0000065B 5D                  <1> 		pop		bp
    76                              <1> 
    77 0000065C C3                  <1> 		ret
    78                              <1> 
    79 0000065D 90                  <1> ALIGN 2
    80 0000065E 00<rept>            <1> .chs:	times drive_size	db	0				;∂¡»°µƒsectorµƒ«È±®
    98                                  
    99                                  stage_2:
   100 00000666 68[E006]E854FA83C4-     	cdecl puts, .s0
   100 0000066E 02                 
   101                                  
   102                                  	;-----------------
   103                                  	;ÂèñÂæódriveÁöÑ‰ø°ÊÅØ
   104                                  	;---------------;
   105                                  
   106 0000066F 68[B800]E817FC83C4-     	cdecl get_drive_param,BOOT ;(get_drive_param(DX,BOOT.CYLN))
   106 00000677 02                 
   107 00000678 83F800                  	cmp ax,0
   108 0000067B 750C                    .10Q: jne .10E
   109 0000067D 68[1107]E83DFA83C4-     .10T: cdecl puts,.e0
   109 00000685 02                 
   110 00000686 E856FA                  	call reboot
   111                                  .10E:
   112 00000689 A1[B800]                	mov ax,[BOOT + drive.no]
   113 0000068C 6A046A106A0268-         	cdecl itoa,ax,.p1,2,16,0b0100
   113 00000693 [F806]50E873FB83C4-
   113 0000069B 0A                 
   114 0000069C A1[BA00]                	mov ax,[BOOT + drive.cyln]
   115 0000069F 6A046A106A0268-         	cdecl itoa,ax,.p2,2,16,0b0100
   115 000006A6 [FF06]50E860FB83C4-
   115 000006AE 0A                 
   116 000006AF A1[BC00]                	mov ax,[BOOT + drive.head]
   117 000006B2 6A046A106A0268-         	cdecl itoa,ax,.p3,2,16,0b0100
   117 000006B9 [0607]50E84DFB83C4-
   117 000006C1 0A                 
   118 000006C2 A1[BE00]                	mov ax,[BOOT + drive.sect]
   119 000006C5 6A046A106A0268-         	cdecl itoa,ax,.p4,2,16,0b0100
   119 000006CC [0D07]50E83AFB83C4-
   119 000006D4 0A                 
   120                                  
   121 000006D5 68[EF06]E8E5F983C4-     	cdecl puts, .s1
   121 000006DD 02                 
   122                                  
   123 000006DE EB4D                    	jmp stage_3rd
   124                                  
   125 000006E0 326E64207374616765-     .s0 db "2nd stage...",0X0A,0x0D,0
   125 000006E9 2E2E2E0A0D00       
   126                                  
   127 000006EF 2044726976653A3078      .s1 db " Drive:0x"
   128 000006F8 202C20433A3078          .p1 db " , C:0x" 
   129 000006FF 202C20483A3078          .p2 db " , H:0x" 
   130 00000706 202C20533A3078          .p3 db " , S:0x" 
   131 0000070D 200A0D00                .p4 db " ", 0X0A,0X0D,0 
   132 00000711 43616E272074206765-     .e0 db "Can' t get drive parameter.", 0
   132 0000071A 742064726976652070-
   132 00000723 6172616D657465722E-
   132 0000072C 00                 
   133                                  
   134                                  ;**************************
   135                                  ;stage3
   136                                  ;**************************
   137                                  
   138                                  stage_3rd:
   139 0000072D 68[B907]E88DF983C4-     	cdecl puts,.s0
   139 00000735 02                 
   140                                  	
   141 00000736 68[0002]E891FB83C4-     	cdecl get_font_adr,FONT
   141 0000073E 02                 
   142                                  
   143                                  	;------------
   144                                  	;//Ë°®Á§∫font address
   145                                  	;------------
   146                                  
   147 0000073F 6A046A106A0468-         	cdecl itoa, word[FONT.seg],.p1,4,16,0b0100
   147 00000746 [D507]FF36[0002]E8-
   147 0000074D BDFA83C40A         
   148 00000752 6A046A106A0468-         	cdecl itoa, word[FONT.off],.p2,4,16,0b0100
   148 00000759 [D907]FF36[0202]E8-
   148 00000760 AAFA83C40A         
   149                                  
   150 00000765 68[C807]E855F983C4-     	cdecl puts ,.s1
   150 0000076D 02                 
   151                                  
   152                                  	;--------------------
   153                                  	;Ë°®Á§∫memory address
   154                                  	;--------------------
   155 0000076E 68[0402]E879FB83C4-     	cdecl get_mem_info,ACPI_DATA
   155 00000776 02                 
   156 00000777 68[B907]E843F983C4-     	cdecl puts ,.s0
   156 0000077F 02                 
   157                                  
   158 00000780 66A1[0402]              	mov eax,[ACPI_DATA.adr]		;//EAX = ACPI_DATA.adr		
   159 00000784 6683F800                	cmp eax,0					;//if(eax)
   160 00000788 742D                    	je .10E
   161                                  	
   162 0000078A 6A046A106A0468-         	cdecl itoa,ax,.p4,4,16,0b0100	;//‰Ωé‰ΩçÂú∞ÂùÄËΩ¨Êç¢
   162 00000791 [F107]50E875FA83C4-
   162 00000799 0A                 
   163 0000079A 66C1E810                	shr eax,16
   164 0000079E 6A046A106A0468-         	cdecl itoa,ax,.p3,4,16,0b0100	;//	È´ò‰ΩçÂú∞ÂùÄËΩ¨Êç¢
   164 000007A5 [ED07]50E861FA83C4-
   164 000007AD 0A                 
   165                                  
   166 000007AE 68[E307]E80CF983C4-     	cdecl puts ,.s2		;//ÊâìÂç∞Âú∞ÂùÄ
   166 000007B6 02                 
   167                                  
   168                                  .10E:
   169 000007B7 EB3F                    	jmp stage_4
   170                                  
   171                                  
   172 000007B9 337264207374616765-     .s0 db "3rd stage...",0x0A,0X0D,0
   172 000007C2 2E2E2E0A0D00       
   173 000007C8 466F6E742041646472-     .s1 db "Font Address="
   173 000007D1 6573733D           
   174 000007D5 5A5A5A5A                .p1 db "ZZZZ"
   175 000007D9 5A5A5A5A0A0D00          .p2 db "ZZZZ",0x0A,0x0D,0
   176 000007E0 0A0D00                  	db 0x0A,0X0D,0
   177                                  
   178 000007E3 414350495F44415441-     .s2 db "ACPI_DATA="
   178 000007EC 3D                 
   179 000007ED 5A5A5A5A                .p3 db "ZZZZ"
   180 000007F1 5A5A5A5A0A0D00          .p4 db "ZZZZ",0x0A,0x0D,0
   181                                  
   182                                  ;********************
   183                                  ;Á¨¨ÂõõÈò∂ÊÆµ
   184                                  ;********************
   185                                  
   186                                  stage_4:
   187                                  	
   188 000007F8 68[C308]E8C2F883C4-     	cdecl puts,.s0
   188 00000800 02                 
   189                                  
   190                                  	;-----------------
   191                                  	;A20 gateÁöÑÊúâÊïàÂåñ
   192                                  	;-----------------
   193                                  
   194 00000801 FA                      	cli					;//‰∏≠Êñ≠ËøõÂà∂
   195 00000802 68AD00E8CEFD83C402      	cdecl KBC_Cmd_Write,0xAD ;//ÈîÆÁõòÊó†ÊïàÂåñ
   196                                  
   197 0000080B 68D000E8C5FD83C402      	cdecl KBC_Cmd_Write,0xD0	;//ËØªÂèñËæìÂá∫Á´ØÂè£ÁöÑÂëΩ‰ª§
   198 00000814 68[0909]E898FD83C4-     	cdecl KBC_Data_Read,.key	;//ËæìÂá∫Á´ØÂè£ÁöÑÊï∞ÊçÆËØªÂÖ•key
   198 0000081C 02                 
   199                                  
   200 0000081D 8A1E[0909]              	mov bl,[.key]	;BL = key
   201 00000821 80CB02                  	or bl,0x02		;BL |= 0x02 A20 gateÁöÑÊúâÊïàÂåñ
   202                                  
   203 00000824 68D100E8ACFD83C402      	cdecl KBC_Cmd_Write,0xD1	;//ÂÜôÂÖ•ËæìÂá∫Á´ØÂè£ÁöÑÂëΩ‰ª§
   204 0000082D 53E863FD83C402          	cdecl KBC_Data_Write,bx     ;//ËæìÂá∫Á´ØÂè£Êï∞ÊçÆ
   205                                  
   206 00000834 68AE00E89CFD83C402      	cdecl KBC_Cmd_Write,0xAE ;//ÈîÆÁõòÊúâÊïàÂåñ
   207 0000083D FB                      	sti						;//ÂÖÅËÆ∏‰∏≠Êñ≠
   208                                  
   209 0000083E 68[D208]E87CF883C4-     	cdecl puts,.s1
   209 00000846 02                 
   210                                  
   211                                  	;-----------------
   212                                  	;ÈîÆÁõòledÊµãËØï
   213                                  	;-----------------
   214                                  
   215 00000847 BB0000                  	mov bx,0          ;//bx = ledÁöÑÂàùÂßãÂÄº 0
   216                                  .10L:
   217                                  	
   218 0000084A B400                    	mov ah,0x00		;//Á≠âÂæÖÈîÆÁõòËæìÂÖ•
   219 0000084C CD16                    	int 0x16
   220                                  
   221 0000084E 3C31                    	cmp al,'1' ;if(AL<'1') break
   222 00000850 7266                    	jb .10E
   223                                  
   224 00000852 3C33                    	cmp al,'3';if(AL>'3') break
   225 00000854 7762                    	ja .10E
   226                                  
   227 00000856 88C1                    	mov cl,al		;cl = ÈîÆÁõòËæìÂÖ•
   228 00000858 FEC9                    	dec cl
   229 0000085A 80E103                  	and cl,0x03     ;cl = 0~2
   230 0000085D B80100                  	mov ax,0x0001  
   231 00000860 D3E0                    	shl ax,cl		;ÊääÊØè‰∏™ËæìÂÖ•ËÆæÁΩÆ‰∏∫‰∏Ä‰∏™‰Ωç
   232 00000862 31C3                    	xor bx,ax    ;bx = bx^ax  ;//ËÆæÁΩÆledÂÄº
   233                                  
   234                                  	;----------------
   235                                  	;LEDÂëΩ‰ª§‰º†Ëæì
   236                                  	;----------------
   237 00000864 FA                      	cli
   238                                  
   239 00000865 68AD00E86BFD83C402      	cdecl KBC_Cmd_Write, 0xAD ;//Êó†ÊïàÂåñÈîÆÁõò
   240                                  
   241 0000086E 68ED00E820FD83C402      	cdecl KBC_Data_Write,0XED ;//LEDËÆæÁΩÆ
   242 00000877 68[0909]E835FD83C4-     	cdecl KBC_Data_Read,.key  ;//Á≠âÂæÖÈîÆÁõòÂõûÂ§ç
   242 0000087F 02                 
   243                                  	
   244 00000880 803E[0909]FA            	cmp [.key],byte 0xFA  ;//ACK
   245 00000885 7509                    	jne .11F
   246                                  
   247 00000887 53E809FD83C402          	cdecl KBC_Data_Write,bx ;//LED Êï∞ÊçÆËæìÂá∫
   248 0000088E EB1C                    	jmp .11E
   249                                  
   250                                  .11F:
   251 00000890 6A046A106A0268-         	cdecl itoa,word[.key],.e1,2,16,0b100
   251 00000897 [0509]FF36[0909]E8-
   251 0000089E 6CF983C40A         
   252 000008A3 68[0409]E817F883C4-     	cdecl puts,.e0
   252 000008AB 02                 
   253                                  .11E:
   254                                  	
   255 000008AC 68AE00E824FD83C402      	cdecl KBC_Cmd_Write,0xAE ;//ÈîÆÁõòÊúâÊïàÂåñ
   256 000008B5 FB                      	sti
   257 000008B6 EB92                    	jmp .10L
   258                                  .10E:
   259 000008B8 68[FB08]E802F883C4-     	cdecl puts,.s3
   259 000008C0 02                 
   260                                  
   261 000008C1 EB48                    	jmp stage_5
   262                                  
   263 000008C3 347264207374616765-     .s0 db "4rd stage...",0x0A,0X0D,0
   263 000008CC 2E2E2E0A0D00       
   264 000008D2 413230204761746520-     .s1 db "A20 Gate Enabled.",0x0A,0x0D,0
   264 000008DB 456E61626C65642E0A-
   264 000008E4 0D00               
   265 000008E6 4B6579426F61726420-     .s2 db "KeyBoard LED Test...",0
   265 000008EF 4C454420546573742E-
   265 000008F8 2E2E00             
   266 000008FB 28646F6E65290A0D00      .s3 db "(done)",0x0A,0x0D,0
   267 00000904 5B                      .e0 db "["
   268 00000905 5A5A5D00                .e1 db "ZZ]",0
   269                                  
   270 00000909 0000                    .key dw 0
   271                                  
   272                                  stage_5:
   273 0000090B 68[3709]E8AFF783C4-     	cdecl puts,.s0
   273 00000913 02                 
   274                                  
   275                                  	;------------
   276                                  	;ËØªÂÖ•kernel
   277                                  	;------------
   278                                  
   279 00000914 68009C6A106A1068-       	cdecl read_lba,BOOT,BOOT_SECT,KERNEL_SECT,BOOT_END
   279 0000091C [B800]E80EFD83C408 
   280 00000924 83F810                  	cmp ax,KERNEL_SECT ;//if(Ê≤°ÊúâËØªÂèñÂÆå) Âàôreboot 
   281 00000927 740C                    .10Q: jz	.10E
   282 00000929 68[4609]E891F783C4-     .10T: cdecl puts,.e0
   282 00000931 02                 
   283 00000932 E8AAF7                  	call reboot	
   284                                  .10E:
   285                                  
   286 00000935 EB29                    	jmp		stage_6
   287                                  
   288 00000937 357468207374616765-     .s0		db	"5th stage...", 0x0A, 0x0D, 0
   288 00000940 2E2E2E0A0D00       
   289 00000946 204661696C75726520-     .e0		db	" Failure load kernel...", 0x0A, 0x0D, 0
   289 0000094F 6C6F6164206B65726E-
   289 00000958 656C2E2E2E0A0D00   
   290                                  
   291                                  stage_6:
   292                                  	
   293 00000960 68[8109]E85AF783C4-     	cdecl puts,.s0
   293 00000968 02                 
   294                                  
   295                                  .10L:				;//Á≠âÂæÖÈîÆÁõòËæìÂÖ•
   296 00000969 B400                    	mov ah,0x00
   297 0000096B CD16                    	int 0x16
   298 0000096D 3C20                    	cmp al,' '
   299 0000096F 75F8                    	jne .10L
   300                                  
   301 00000971 68[8109]E849F783C4-     	cdecl puts,.s0
   301 00000979 02                 
   302                                  	;-----------------------
   303                                  	;video modeËÆæÂÆö
   304                                  	;-----------------------
   305 0000097A B81200                  	mov ax,0x0012
   306 0000097D CD10                    	int 0x10
   307                                  
   308 0000097F EBFE                    	jmp $
   309                                  
   310 00000981 367468207374616765-     .s0 db "6th stage...",0x0A,0X0D,0X0A,0x0D
   310 0000098A 2E2E2E0A0D0A0D     
   311 00000991 5B5075736820535041-     	db "[Push SPACE key to protect mode...]",0x0A,0x0D,0
   311 0000099A 4345206B657920746F-
   311 000009A3 2070726F7465637420-
   311 000009AC 6D6F64652E2E2E5D0A-
   311 000009B5 0D00               
   312                                  
   313                                  ;************************************************
   314                                  ;global descriptor table
   315                                  ;segment descriptor Êï∞ÁªÑ
   316                                  ;************************************************
   317                                  
   318 000009B7 00                      ALIGN 4,db 0
   319 000009B8 0000000000000000        GDT:			dq	0x00_0_0_0_0_000000_0000	;// NULL table
   320 000009C0 FFFF0000009ACF00        .cs:			dq	0x00_C_F_9_A_000000_FFFF	;//CODE_table 4G
   321 000009C8 FFFF00000092CF00        .ds:			dq	0x00_C_F_9_2_000000_FFFF	;//DATA_table 4G
   322                                  .gdt_end:
   323                                  
   324                                  ;-----------------------
   325                                  ;selector
   326                                  ;-----------------------
   327                                  SEL_CODE equ .cs - GDT    ;//Code selector
   328                                  SEL_DATA equ .ds - GDT    ;//Data selector
   329                                  
   330                                  ;------------------
   331                                  ;GDT
   332                                  ;------------------
   333 000009D0 1700                    GDTR: dw GDT.gdt_end - GDT - 1		;//descriptor table ÁöÑÈôêÂà∂
   334 000009D2 [B8090000]              	dd GDT							;//descriptor table ÁöÑÂú∞ÂùÄ
   335                                  
   336                                  ;----------------------------------
   337                                  ;IDT(‰∏∫‰∫ÜÁ¶ÅÊ≠¢‰∏≠Êñ≠)
   338                                  ;----------------------------------
   339 000009D6 0000                    IDTR: dw 0			;IDT limit
   340 000009D8 00000000                	dd 0			;IDT address
   341                                  
   342                                  ;***********************************
   343                                  ;stage7
   344                                  ;***********************************
   345                                  stage_7:
   346 000009DC FA                      	cli
   347                                  	
   348                                  	;---------------
   349                                  	;load GDT
   350                                  	;---------------
   351 000009DD 0F0116[D009]            	lgdt [GDTR]				;// load global descriptor table
   352 000009E2 0F011E[D609]            	lidt [IDTR]				;//load interepter descriptor table
   353                                  	
   354                                  	;----------------
   355                                  	;ËøõÂÖ•‰øùÊä§Ê®°Âºè
   356                                  	;----------------
   357 000009E7 0F20C0                  	mov eax,cr0 ;//ËÆæÁΩÆPE‰Ωç
   358 000009EA 83C801                  	or ax,1		;// CR0 |=1;
   359 000009ED 0F22C0                  	mov cr0,eax	;
   360                                  
   361                                  
   362 000009F0 EB00                    	jmp $ + 2
   363                                  	
   364                                  	;--------------------
   365                                  	;segment‰πãÈó¥Ë∑≥ËΩ¨
   366                                  	;--------------------
   367                                  [BITS 32]
   368 000009F2 66                      	DB 0x66     ;//Êìç‰ΩúÊï∞Â§ßÂ∞èoverideÂâçÁºÄ
   369 000009F3 EA[FA090000]0800        	jmp SEL_CODE:CODE_32
   370                                  
   371                                  ;--------------------------------
   372                                  ;32bit‰ª£Á†ÅÊÆµÁöÑÂºÄÂßã
   373                                  ;--------------------------------
   374                                  
   375                                  CODE_32:
   376                                  
   377                                  	;---------------------
   378                                  	;selector ÂàùÂßãÂåñ
   379                                  	;---------------------
   380                                  
   381 000009FA 66B81000                	mov ax,SEL_DATA
   382 000009FE 8ED8                    	mov ds,ax
   383 00000A00 8EC0                    	mov es,ax
   384 00000A02 8EE0                    	mov fs,ax
   385 00000A04 8EE8                    	mov gs,ax
   386 00000A06 8ED0                    	mov ss,ax
   387                                  
   388                                  	;------------------
   389                                  	;Â§çÂà∂kernelÈÉ®ÂàÜ
   390                                  	;------------------
   391 00000A08 B900080000              	mov ecx,(KERNEL_SIZE)/4  ;4byte‰Ωú‰∏∫‰∏Ä‰∏™Âçï‰ΩçÂ§çÂà∂
   392 00000A0D BE009C0000              	mov esi,BOOT_END		 ;ESI = 0x0000_9C90 ;//kernelÈÉ®ÂàÜ
   393 00000A12 BF00101000              	mov edi,KERNEL_LOAD      ;EDI = 0x0010_1000;//È´ò‰ΩçÂÜÖÂ≠ò
   394 00000A17 FC                      	cld						 ;//Ê≠£ÊñπÂêë
   395 00000A18 F3A5                    	rep movsd				 ;while(--ecx)*EDI++ = *ESI++
   396                                  
   397                                  	;---------------------
   398                                  	;Ë∑≥ËΩ¨Âà∞kernelÂ§ÑÁêÜ
   399                                  	;--------------------
   400 00000A1A E9(00101000)            	jmp KERNEL_LOAD		
   401                                  
   402                                  ;**********************
   403                                  ;padding
   404                                  ;**********************
   405 00000A1F 00<rept>                	times BOOT_SIZE-($-$$) db 0 ;//8KB
