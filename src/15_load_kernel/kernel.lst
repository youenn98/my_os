     1                                  %include "../include/define.s"
     1                              <1> BOOT_LOAD equ 0x7C00      ;//boot程序加载地址
     2                              <1> BOOT_SIZE equ (1024 * 8)  ;//boot代码段大小
     3                              <1> BOOT_END  equ (BOOT_LOAD + BOOT_SIZE) ;
     4                              <1> 
     5                              <1> SECT_SIZE equ (512)       ;//sector大小
     6                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)   ;//boot的sector数
     7                              <1> 
     8                              <1> E820_RECORD_SIZE equ 20
     9                              <1> 
    10                              <1> KERNEL_LOAD equ 0x0010_1000
    11                              <1> KERNEL_SIZE equ (1024*8) ;//kernel的大小仍然是8k
    12                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
     2                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist  ;//1-*是一个以上的参数
     2                              <1> 
     3                              <1> 	%rep %0 - 1         ;//%0是参数的个数
     4                              <1> 		push %{-1:-1}  ;//%将参数倒着压栈
     5                              <1> 		%rotate -1   
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1      ;//恢复原来的参数
     8                              <1> 
     9                              <1> 	call %1
    10                              <1> 	%if 1 < %0
    11                              <1> 		add sp,(__BITS__ >> 3)*(%0 - 1)     ;//__BITS__是表示16比特模式还是32比特模式
    12                              <1> 	%endif									;//给每个参数分配栈空间
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 <res 00000002>      <1> 	.no resw 1	 ;驱动号
    17 00000002 <res 00000002>      <1> 	.cyln resw 1 ;cylinder
    18 00000004 <res 00000002>      <1> 	.head resw 1 ;head
    19 00000006 <res 00000002>      <1> 	.sect resw 1 ;sector
    20                              <1> endstruc
    21                              <1> 
     3                                  	
     4                                  	ORG KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  ;*******************
     8                                  ;entry  point
     9                                  ;*******************
    10                                  kernel:
    11 00000000 EBFE                    	jmp $
    12                                  
    13                                  ;********************
    14                                  ;padding
    15                                  ;********************
    16 00000002 00<rept>                	times KERNEL_SIZE -($-$$) db 0;
