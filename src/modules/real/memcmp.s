;************************************************************************
;	メモリの比較
;========================================================================
;■書式		: WORD memcmp(src0, src1, size);
;
;■引数
;	src0	: 比較アドレス0
;	src1	: 比較アドレス1
;	size	: バイト数
;
;■戻り値	: 一致(0)、不一致(0以外)
;************************************************************************
memcmp:
		;---------------------------------------
		; 【スタックフレームの構築】
		;---------------------------------------
												; ------|--------
												;  BP+ 8| バイト数
												;  BP+ 6| アドレス2
												;  BP+ 4| アドレス1
												; ------|--------
		push	bp								;  BP+ 2| IP（戻り番地）
		mov		bp, sp							;  BP+ 0| BP（元の値）
												; ------+--------
		;---------------------------------------
		; 【レジスタの保存】
		;---------------------------------------
		push	bx
		push	cx
		push	dx
		push	si
		push	di

		;---------------------------------------
		; 引数の取得
		;---------------------------------------
		cld										; // DFクリア（+方向）
		mov		si, [bp + 4]					; // アドレス1
		mov		di, [bp + 6]					; // アドレス2
		mov		cx, [bp + 8]					; // バイト数

		;---------------------------------------
		; バイト単位での比較
		;---------------------------------------
		repe cmpsb								; if (ZF = 異なる文字無し)
		jnz		.10F							; {
		mov		ax, 0							;   ret = 0; // 一致
		jmp		.10E							; }
.10F:											; else
												; {
		mov		ax, -1							;   ret = -1; // 不一致
.10E:											; }

		;---------------------------------------
		; 【レジスタの復帰】
		;---------------------------------------
		pop		di
		pop		si
		pop		dx
		pop		cx
		pop		bx

		;---------------------------------------
		; 【スタックフレームの破棄】
		;---------------------------------------
		mov		sp, bp
		pop		bp

		ret

