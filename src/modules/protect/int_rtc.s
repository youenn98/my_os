;************************************************************************
;	允许RTC自发中断
;************************************************************************
rtc_int_en:
		;---------------------------------------
		; 允许中断设定
		;---------------------------------------

		push	ebp								
		mov		ebp, esp						

		push	eax

		;---------------------------------------
		; 允许中断设定
		;---------------------------------------
		outp	0x70, 0x0B						; outp(0x70, AL);   // 选择寄存器B

		in		al, 0x71						; AL  = port(0x71); //设定寄存器B的指定bit 
		or		al, [ebp + 8]					; AL |= bit;     //

		out		0x71, al						; outp(0x71, AL);   // 写入寄存器B

	
		pop		eax

		mov		esp, ebp
		pop		ebp

		ret


;************************************************************************
;	RTC中断处理
;************************************************************************
int_rtc:
		pusha
		push	ds
		push	es

		;---------------------------------------
		; 将ds和es设置为数据用segment selector
		;---------------------------------------
		mov		ax, 0x0010						; 
		mov		ds, ax							; 
		mov		es, ax							; 

		;---------------------------------------
		; 从RTC获取时间
		;---------------------------------------
		cdecl	rtc_get_time, RTC_TIME			; EAX = get_time(&RTC_TIME);
												; 
		;---------------------------------------
		; 获取RTC中断的原因
		;---------------------------------------
		outp	0x70, 0x0C						; outp(0x70, 0x0C); // 选择寄存器C
		in		al, 0x71						; AL = inp();

		;---------------------------------------
		; 清楚中断标识符(EOI)
		;---------------------------------------
		outp	0xA0, 0x20						; outp(0xA0, EOI); // 从PIC
		outp	0x20, 0x20						; outp(0x20, EOI); // 主PIC


		pop		es								; 
		pop		ds								; 
		popa									; 

		iret									; 中断返回

