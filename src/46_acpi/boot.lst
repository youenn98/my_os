     1                                  ;**************************
     2                                  ; ÂÆèËÆæÂÆö
     3                                  ;*************************
     4                                  %include "../include/macro.s"
     1                              <1> %macro cdecl 1-*.nolist  ;//1-* «“ª∏ˆ“‘…œµƒ≤Œ ˝
     2                              <1> 
     3                              <1> 	%rep %0 - 1         ;//%0 «≤Œ ˝µƒ∏ˆ ˝
     4                              <1> 		push %{-1:-1}  ;//%Ω´≤Œ ˝µπ◊≈—π’ª
     5                              <1> 		%rotate -1   
     6                              <1> 	%endrep
     7                              <1> 	%rotate -1      ;//ª÷∏¥‘≠¿¥µƒ≤Œ ˝
     8                              <1> 
     9                              <1> 	call %1
    10                              <1> 	%if 1 < %0
    11                              <1> 		add sp,(__BITS__ >> 3)*(%0 - 1)     ;//__BITS__ «±Ì æ16±»Ãÿƒ£ Ωªπ «32±»Ãÿƒ£ Ω
    12                              <1> 	%endif									;//∏¯√ø∏ˆ≤Œ ˝∑÷≈‰’ªø’º‰
    13                              <1> %endmacro
    14                              <1> 
    15                              <1> struc drive
    16 00000000 <res 00000002>      <1> 	.no resw 1	 ;«˝∂Ø∫≈
    17 00000002 <res 00000002>      <1> 	.cyln resw 1 ;cylinder
    18 00000004 <res 00000002>      <1> 	.head resw 1 ;head
    19 00000006 <res 00000002>      <1> 	.sect resw 1 ;sector
    20                              <1> endstruc
    21                              <1> 
    22                              <1> %macro set_vect 1-*.nolist
    23                              <1> 		push eax
    24                              <1> 		push edi
    25                              <1> 
    26                              <1> 		mov edi,VECT_BASE + (%1 * 8)  ;œÚ¡øµÿ÷∑
    27                              <1> 		mov eax, %2
    28                              <1> 
    29                              <1> 	%if 3 == %0
    30                              <1> 		mov [edi + 4],%3
    31                              <1> 	%endif
    32                              <1> 
    33                              <1> 		mov  [edi + 0],ax		;¿˝Õ‚µÿ÷∑[15:0]
    34                              <1> 		shr eax,16
    35                              <1> 		mov  [edi + 6],ax		;¿˝Õ‚µÿ÷∑[31:16]
    36                              <1> 
    37                              <1> 		pop edi
    38                              <1> 		pop eax
    39                              <1> %endmacro
    40                              <1> 
    41                              <1> 
    42                              <1> %macro outp 2
    43                              <1> 	mov al,%2
    44                              <1> 	out %1,al
    45                              <1> %endmacro
    46                              <1> 
    47                              <1> %define RING_ITEM_SIZE (1<<4)
    48                              <1> %define RING_INDEX_MASK (RING_ITEM_SIZE - 1)
    49                              <1> 
    50                              <1> struc ring_buff
    51 00000000 <res 00000004>      <1> 	.rp		resd 1
    52 00000004 <res 00000004>      <1> 	.wp		resd 1
    53 00000008 <res 00000010>      <1> 	.item   resb RING_ITEM_SIZE
    54                              <1> endstruc
    55                              <1> 
    56                              <1> %macro  set_desc 2-* 
    57                              <1> 		push	eax
    58                              <1> 		push	edi
    59                              <1> 
    60                              <1> 		mov		edi, %1							
    61                              <1> 		mov		eax, %2							
    62                              <1> 
    63                              <1> 	%if 3 == %0
    64                              <1> 		mov		[edi + 0], %3		
    65                              <1> 	%endif
    66                              <1> 
    67                              <1> 		mov		[edi + 2], ax					; [15: 0]
    68                              <1> 		shr		eax, 16							; 
    69                              <1> 		mov		[edi + 4], al					; [23:16]
    70                              <1> 		mov		[edi + 7], ah					; [31:24]
    71                              <1> 
    72                              <1> 		pop		edi
    73                              <1> 		pop		eax
    74                              <1> %endmacro
    75                              <1> 
    76                              <1> ;…Ë÷√call_gate
    77                              <1> 
    78                              <1> %macro  set_gate 2-* 
    79                              <1> 		push	eax
    80                              <1> 		push	edi
    81                              <1> 
    82                              <1> 		mov		edi, %1							; descriptor address
    83                              <1> 		mov		eax, %2							; base address
    84                              <1> 
    85                              <1> 		mov		[edi + 0], ax					; base([15: 0])
    86                              <1> 		shr		eax, 16							; 
    87                              <1> 		mov		[edi + 6], ax					; base([31:16])
    88                              <1> 
    89                              <1> 		pop		edi
    90                              <1> 		pop		eax
    91                              <1> %endmacro
    92                              <1> 
    93                              <1> struc rose
    94 00000000 <res 00000004>      <1> 		.x0				resd	1				; ◊Û…œ◊¯±Í:X0
    95 00000004 <res 00000004>      <1> 		.y0				resd	1				; ◊Û…œ◊¯±Í:Y0
    96 00000008 <res 00000004>      <1> 		.x1				resd	1				; ”“œ¬◊¯±Í:X1
    97 0000000C <res 00000004>      <1> 		.y1				resd	1				; ”“œ¬◊¯±Í:Y1
    98                              <1> 
    99 00000010 <res 00000004>      <1> 		.n				resd	1				; ±‰ ˝:n
   100 00000014 <res 00000004>      <1> 		.d				resd	1				; ±‰ ˝:d
   101                              <1> 
   102 00000018 <res 00000004>      <1> 		.color_x		resd	1				; —’…´:X÷·
   103 0000001C <res 00000004>      <1> 		.color_y		resd	1				; —’…´:Y÷·
   104 00000020 <res 00000004>      <1> 		.color_z		resd	1				; —’…´:¬÷¿™
   105 00000024 <res 00000004>      <1> 		.color_s		resd	1				; —’…´:Œƒ◊÷
   106 00000028 <res 00000004>      <1> 		.color_f		resd	1				; —’…´:graph√Ëª≠—’…´
   107 0000002C <res 00000004>      <1> 		.color_b		resd	1				; —’…´:graphœ˚»•—’…´
   108                              <1> 
   109 00000030 <res 00000010>      <1> 		.title			resb	16				; title
   110                              <1> endstruc
     5                                  %include "../include/define.s"
     1                              <1> BOOT_LOAD equ 0x7C00      ;//boot≥Ã–Úº”‘ÿµÿ÷∑
     2                              <1> BOOT_SIZE equ (1024 * 8)  ;//boot¥˙¬Î∂Œ¥Û–°
     3                              <1> BOOT_END  equ (BOOT_LOAD + BOOT_SIZE) ;
     4                              <1> 
     5                              <1> SECT_SIZE equ (512)       ;//sector¥Û–°
     6                              <1> BOOT_SECT equ (BOOT_SIZE / SECT_SIZE)   ;//bootµƒsector ˝
     7                              <1> 
     8                              <1> E820_RECORD_SIZE equ 20
     9                              <1> 
    10                              <1> KERNEL_LOAD equ 0x0010_1000
    11                              <1> KERNEL_SIZE equ (1024 * 8) ;//kernelµƒ¥Û–°»‘»ª «8k
    12                              <1> KERNEL_SECT equ (KERNEL_SIZE / SECT_SIZE)
    13                              <1> 
    14                              <1> VECT_BASE			equ		0x0010_0000		;	0010_0000:0010_07FF
    15                              <1> 
    16                              <1> 		STACK_BASE		equ		 0x0010_3000
    17                              <1> 		STACK_SIZE		equ		 1024
    18                              <1> 
    19                              <1> 		SP_TASK_0			equ		STACK_BASE + (STACK_SIZE * 1)
    20                              <1> 		SP_TASK_1			equ		STACK_BASE + (STACK_SIZE * 2)
    21                              <1> 		SP_TASK_2			equ		STACK_BASE + (STACK_SIZE * 3)
    22                              <1> 		SP_TASK_3			equ		STACK_BASE + (STACK_SIZE * 4)
    23                              <1> 		SP_TASK_4			equ		STACK_BASE + (STACK_SIZE * 5)
    24                              <1> 		SP_TASK_5			equ		STACK_BASE + (STACK_SIZE * 6)
    25                              <1> 		SP_TASK_6			equ		STACK_BASE + (STACK_SIZE * 7)
    26                              <1> 
    27                              <1> 	CR3_BASE		equ			0x0010_5000 ;
    28                              <1> 
    29                              <1> PARAM_TASK_4 equ  0x0010_8000	;//√Ëª≠parameter : task4”√
    30                              <1> PARAM_TASK_5 equ  0x0010_9000	;//√Ëª≠parameter : task5”√
    31                              <1> PARAM_TASK_6 equ  0x0010_A000	;//√Ëª≠parameter : task6”√
    32                              <1> 
    33                              <1> CR3_TASK_4  equ		0x0020_0000
    34                              <1> CR3_TASK_5  equ     0x0020_2000
    35                              <1> CR3_TASK_6  equ     0x0020_4000
     6                                  
     7                                  ORG BOOT_LOAD               ;ÂêëÁºñËØëÂô®ÊåáÁ§∫Âä†ËΩΩÂú∞ÂùÄ
     8                                  
     9                                  entry:
    10                                  	;------------------
    11                                  	;BPB(BIOS Parameter Block)
    12                                  	;------------------
    13 00000000 EB3C                    		jmp		ipl								; 0x00( 3) Ë∑≥ËΩ¨Âà∞boot_codeÁöÑÂëΩ‰ª§
    14 00000002 90                      		times	3 - ($ - $$) db 0x90			; 
    15 00000003 4F454D2D4E414D45        		db		'OEM-NAME'						; 0x03( 8) OEMÂêç
    16                                  												; -------- --------------------------------
    17 0000000B 0002                    		dw		512								; 0x0B( 2) sectorÁöÑÂ≠óËäÇÊï∞
    18 0000000D 01                      		db		1								; 0x0D( 1) clusterÁöÑsectorÊï∞
    19 0000000E 2000                    		dw		32								; 0x0E( 2) È¢ÑÁïôÁöÑsectorÊï∞
    20 00000010 02                      		db		2								; 0x10( 1) FATÊï∞
    21 00000011 0002                    		dw		512								; 0x11( 2) root entryÊï∞
    22 00000013 F0FF                    		dw		0xFFF0							; 0x13( 2) ÊÄªsectorÊï∞16
    23 00000015 F8                      		db		0xF8							; 0x15( 1) media type
    24 00000016 0001                    		dw		256								; 0x16( 2) FATÁöÑsectorÊï∞
    25 00000018 1000                    		dw		0x10							; 0x18( 2) trackÁöÑsectorÊï∞
    26 0000001A 0200                    		dw		2								; 0x1A( 2) headÊï∞
    27 0000001C 00000000                		dd		0								; 0x1C( 4) Ë¢´ÈöêËóèÁöÑsectorÊï∞
    28                                  												; -------- --------------------------------
    29 00000020 00000000                		dd		0								; 0x20( 4) ÊÄªsectorÊï∞32
    30 00000024 80                      		db		0x80							; 0x24( 1) driveÂè∑
    31 00000025 00                      		db		0								; 0x25( 1) (È¢ÑÁïô)
    32 00000026 29                      		db		0x29							; 0x26( 1) boot flag
    33 00000027 EFBE0000                		dd		0xbeef							; 0x27( 4) serial number
    34 0000002B 424F4F5441424C4520-     		db		'BOOTABLE   '					; 0x2B(11) volumn label
    34 00000034 2020               
    35 00000036 4641543136202020        		db		'FAT16   '						; 0x36( 8) FAT type
    36                                  
    37                                  	;----------------------------
    38                                  	;IPL(Initial Pragram Loader)
    39                                  	;----------------
    40                                  ipl:
    41 0000003E FA                      	cli ;//Á¶ÅÊ≠¢‰∏≠Êñ≠
    42                                  
    43 0000003F B80000                  	mov ax,0x0000
    44 00000042 8ED8                    	mov ds , ax        ;//Â∞ÜÊÆµÂØÑÂ≠òÂô®ÈÉΩÂÖàËÆæÁΩÆ‰∏∫0
    45 00000044 8EC0                    	mov es , ax
    46 00000046 8ED0                    	mov ss , ax
    47 00000048 BC007C                  	mov sp , BOOT_LOAD   ;//Â∞ÜÊ†àÂ∫ïËÆæÁΩÆ‰∏∫bootÁ®ãÂ∫èÂºÄÂßãÁöÑÂú∞Êñπ
    48                                  
    49 0000004B FB                      	sti ;//ÂÖÅËÆ∏‰∏≠Êñ≠
    50                                  
    51 0000004C 8816[9C00]              	mov [BOOT + drive.no], dl;//dlÊòØ‰øùÂ≠òÂêØÂä®Á®ãÂ∫èÁöÑÂ§ñÈÉ®ËÆæÂ§áÁöÑÂ∫èÂè∑
    52                                  
    53 00000050 68[7D00]E84E0083C4-     	cdecl puts,.s0
    53 00000058 02                 
    54                                  
    55                                  	;-------------------
    56                                  	;ËØªÂèñÊé•‰∏ãÊù•ÊâÄÊúâÁöÑsector
    57                                  	;-------------------
    58                                  	
    59 00000059 BB0F00                  	mov bx,BOOT_SECT-1
    60 0000005C B9007E                  	mov cx,BOOT_LOAD + SECT_SIZE
    61                                  
    62 0000005F 515368[9C00]E89B00-     	cdecl read_chs,BOOT,bx,cx   ;AX = read_chs(.chs,bx,cx)
    62 00000067 83C406             
    63                                  
    64 0000006A 39D8                    	cmp ax,bx    ;//if(AX != Ââ©‰∏ãÁöÑsectorÊï∞)
    65 0000006C 740C                    .10Q: jz .10E
    66 0000006E 68[8A00]E8300083C4-     .10T: cdecl puts, .e0 ;//ÂèëÁîüÈîôËØØ
    66 00000076 02                 
    67 00000077 E84900                  	call reboot      ;//ÈáçÂêØ
    68                                  
    69                                  .10E:
    70 0000007A E92906                  	jmp stage_2    ;//ÂêØÂä®Á®ãÂ∫èÁ¨¨‰∫å‰ΩçÁΩÆ
    71                                  
    72 0000007D 426F6F74696E672E2E-     .s0 db "Booting...",0x0A,0x0D,0 ;//0x0AÊòØ‰∏ã‰∏ÄË°å,0x0DÊòØÂ∞ÜkernelÁßªÂà∞ÊúÄÂ∑¶Á´Ø,0‰ª£Ë°®Â≠óÁ¨¶‰∏≤ÁöÑÁªàÁªì
    72 00000086 2E0A0D00           
    73 0000008A 4572726F723A736563-     .e0 db "Error:sector read",0 ;//ÈîôËØØ‰ø°ÊÅØ
    73 00000093 746F72207265616400 
    74                                  
    75                                  ;*******************
    76                                  ;ÂêØÂä®È©±Âä®‰ø°ÊÅØ
    77                                  ;*******************
    78                                  ALIGN 2, db 0
    79                                  BOOT:
    80                                  	istruc drive
    81 0000009C 0000                    		at drive.no, dw 0
    82 0000009E 0000                    		at drive.cyln, dw 0
    83 000000A0 0000                    		at drive.head, dw 0
    84 000000A2 0200                    		at drive.sect, dw 2
    85                                  	iend
    86                                  
    87                                  ;**********************
    88                                  ;module
    89                                  ;***********************
    90                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2 000000A4 55                  <1> 	push bp
     3 000000A5 89E5                <1> 	mov bp,sp
     4                              <1> 
     5 000000A7 50                  <1> 	push ax
     6 000000A8 53                  <1> 	push bx
     7 000000A9 56                  <1> 	push si
     8                              <1> 
     9                              <1> 	;**************
    10                              <1> 	;»°µ√◊÷∑˚¥Æµƒø™ ºµÿ÷∑
    11                              <1> 	;**************
    12 000000AA 8B7604              <1> 	mov si,[bp+4]
    13                              <1> 
    14 000000AD B40E                <1> 	mov ah,0x0E
    15 000000AF BB0000              <1> 	mov bx,0x0000
    16 000000B2 FC                  <1> 	cld    ;//DF = 0 µÿ÷∑µ›‘ˆ
    17                              <1> 
    18                              <1> .10L:
    19                              <1> 	
    20 000000B3 AC                  <1> 	lodsb ;//AL = *SI++
    21                              <1> 
    22 000000B4 3C00                <1> 	cmp al,0	;//if(AL == 0)
    23 000000B6 7404                <1> 	je	.10E	;//breal
    24                              <1> 
    25 000000B8 CD10                <1> 	int 0x10
    26 000000BA EBF7                <1> 	jmp .10L
    27                              <1> .10E:
    28                              <1> 
    29 000000BC 5E                  <1> 	pop si
    30 000000BD 5B                  <1> 	pop bx
    31 000000BE 58                  <1> 	pop ax
    32                              <1> 
    33 000000BF 89EC                <1> 	mov sp,bp
    34 000000C1 5D                  <1> 	pop bp
    35                              <1> 
    36 000000C2 C3                  <1> 	ret
    91                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1> 	;---------------------
     3                              <1> 	;±Ì æ÷ÿ∆Ù–≈œ¢
     4                              <1> 	;--------------------
     5 000000C3 68[DF00]E8DBFF83C4- <1> 	cdecl puts, .s0
     5 000000CB 02                  <1>
     6                              <1> 
     7                              <1> 	;-----------------
     8                              <1> 	;µ»¥˝ ‰»Î
     9                              <1> 	;-----------------
    10                              <1> 
    11                              <1> .10L:
    12                              <1> 	
    13 000000CC B410                <1> 	mov ah,0x10
    14 000000CE CD16                <1> 	int 0x16
    15                              <1> 
    16 000000D0 3C00                <1> 	cmp al,''  ;//»Áπ˚ª∫≥Â«¯”– ˝æ›,µ»¥˝”√ªß ‰»Îªÿ≥µ
    17 000000D2 75F8                <1> 	jne .10L  
    18                              <1> 
    19                              <1> 	;------------------------------
    20                              <1> 	;ªª––
    21                              <1> 	;-----------------------------
    22                              <1> 
    23 000000D4 68[FD00]E8CAFF83C4- <1> 	cdecl puts, .s1
    23 000000DC 02                  <1>
    24                              <1> 
    25 000000DD CD19                <1> 	int 0x19 ;//÷ÿ∆Ù
    26                              <1> 
    27 000000DF 0A0D50555348205350- <1> .s0 db 0x0A,0x0D,"PUSH SPACE key to reboot...",0x0A
    27 000000E8 414345206B65792074- <1>
    27 000000F1 6F207265626F6F742E- <1>
    27 000000FA 2E2E0A              <1>
    28 000000FD 0A0D0A0D00          <1> .s1 db 0x0A,0x0D,0x0A,0x0D,0
    92                                  %include "../modules/real/read_chs.s"
     1                              <1> read_chs:	
     2                              <1> 			; +8 ∏¥÷∆µƒƒøµƒµÿ
     3                              <1> 			; +6 sector ˝
     4                              <1> 			; +4 parameter  buffer
     5 00000102 55                  <1> 	push bp
     6 00000103 89E5                <1> 	mov bp,sp
     7 00000105 6A03                <1> 	push 3 ;//÷ÿ ‘µƒ¥Œ ˝
     8 00000107 6A00                <1> 	push 0 ;//∂¡»Îµƒsector ˝
     9                              <1> 
    10 00000109 53                  <1> 	push bx
    11 0000010A 51                  <1> 	push cx
    12 0000010B 52                  <1> 	push dx
    13 0000010C 06                  <1> 	push es
    14 0000010D 56                  <1> 	push si
    15                              <1> 
    16 0000010E 8B7604              <1> 	mov si,[bp+4]    ;SI = SRCª∫¥Ê
    17                              <1> 
    18                              <1> 	;------------------
    19                              <1> 	;CXºƒ¥Ê∆˜µƒ…Ë∂®
    20                              <1> 	;------------------
    21 00000111 8A6C02              <1> 	mov ch,[si + drive.cyln+0]  ;//ch = cylinder∫≈
    22 00000114 8A4C03              <1> 	mov cl,[si + drive.cyln+1]  ;//cl = cylinder∫≈
    23 00000117 C0E106              <1> 	shl cl,6 ;// ch << 6  ˝æ›œÚ◊Ó∏ﬂŒª∂‘∆Î(cylinder∫≈10Œª)
    24 0000011A 0A4C06              <1> 	or cl,[si + drive.sect]    ;//Ω´6Œªµƒsector∫≈…Ë÷√µΩcxºƒ¥Ê∆˜µƒµÕ¡˘Œª
    25                              <1> 
    26                              <1> 	;--------------------
    27                              <1> 	;∂¡»°sector
    28                              <1> 	;---------------------
    29 0000011D 8A7404              <1> 	mov dh,[si + drive.head] ;//head∫≈
    30 00000120 8A14                <1> 	mov dl,[si+0];         ;//«˝∂Ø∫≈
    31 00000122 B80000              <1> 	mov ax,0x0000        
    32 00000125 8EC0                <1> 	mov es,ax
    33 00000127 8B5E08              <1> 	mov bx,[bp+8]      ;//∏¥÷∆µƒƒøµƒµÿ
    34                              <1> .10L:
    35                              <1> 	
    36 0000012A B402                <1> 	mov ah,0x02     ;//∂¡»°sectorµƒ√¸¡Ó
    37 0000012C 8A4606              <1> 	mov al,[bp+6] ;//sector ˝
    38                              <1> 
    39 0000012F CD13                <1> 	int 0X13
    40 00000131 7304                <1> 	jnc .11E		;//»Áπ˚CF±ª…Ë÷√¡À
    41 00000133 B000                <1> 	mov al,0		;//al = 0
    42 00000135 EB0C                <1> 	jmp .10E
    43                              <1> 
    44                              <1> .11E:
    45                              <1> 
    46 00000137 3C00                <1> 	cmp al,0		
    47 00000139 7508                <1> 	jne .10E  ;//»Áπ˚”–∂¡µΩsector,‘Ú’˝≥£‘À––,∑Ò◊ﬂ÷ÿ ‘
    48                              <1> 
    49 0000013B B80000              <1> 	mov ax,0
    50 0000013E FF4EFE              <1> 	dec word[bp-2]
    51 00000141 75E7                <1> 	jnz .10L
    52                              <1> .10E:
    53 00000143 B400                <1> 	mov ah,0
    54                              <1> 
    55 00000145 5E                  <1> 	pop si
    56 00000146 07                  <1> 	pop es
    57 00000147 5A                  <1> 	pop dx
    58 00000148 59                  <1> 	pop cx
    59 00000149 5B                  <1> 	pop bx
    60                              <1> 
    61 0000014A 89EC                <1> 	mov sp,bp
    62 0000014C 5D                  <1> 	pop bp
    63 0000014D C3                  <1> 	ret
    64                              <1> 
    65                              <1> 
    66                              <1> 
    67                              <1> 
    68                              <1> 
    69                              <1> 
    70                              <1> 
    93                                  ;******************
    94                                  ;boot_flag
    95                                  ;*******************
    96 0000014E 00<rept>                	times 510 -($-$$) db 0x00
    97 000001FE 55AA                    	db 0x55,0xAA
    98                                  
    99                                  ;*********************
   100                                  ;bootÂ§ÑÁêÜÁöÑÁ¨¨‰∫åÈò∂ÊÆµ
   101                                  ;*********************
   102                                  
   103                                  FONT:
   104 00000200 0000                    .seg dw 0
   105 00000202 0000                    .off dw 0
   106                                  ACPI_DATA:
   107 00000204 00000000                .adr dd 0		;ACPI data address
   108 00000208 00000000                .len dd 0		;ACPI data length
   109                                  
   110                                  ;********************
   111                                  ;modules
   112                                  ;********************
   113                                  %include "..\modules\real\itoa.s"
     1                              <1> itoa:
     2                              <1> 		;	+12|∑˚∫≈
     3                              <1> 		;	+10|ª˘ ˝
     4                              <1> 		;	+8 |ª∫¥Êµƒ¥Û–°
     5                              <1> 		;	+6 |ª∫¥Êµƒµÿ÷∑
     6                              <1> 		;	+4 | ˝÷µ
     7                              <1> 		;	+2 |IP (∑µªÿµÿ÷∑)
     8                              <1> 		; BP+0 | ‘≠¿¥µƒBP
     9                              <1> 
    10 0000020C 55                  <1> 	push bp
    11 0000020D 89E5                <1> 	mov bp,sp
    12                              <1> 
    13 0000020F 50                  <1> 	push ax
    14 00000210 53                  <1> 	push bx
    15 00000211 51                  <1> 	push cx
    16 00000212 52                  <1> 	push dx
    17 00000213 56                  <1> 	push si
    18 00000214 57                  <1> 	push di
    19                              <1> 
    20                              <1> 
    21 00000215 8B4604              <1> 	mov ax,[bp + 4] ;//ax =  ˝÷µ
    22 00000218 8B7606              <1> 	mov si,[bp + 6] ;//si = ª∫¥Êµÿ÷∑
    23 0000021B 8B4E08              <1> 	mov cx,[bp + 8] ;//cx = ª∫¥Êµÿ÷∑»›¡ø
    24 0000021E 89F7                <1> 	mov di , si	  ;//di = ª∫¥Êµƒ◊Ó∫Û
    25 00000220 01CF                <1> 	add di , cx
    26 00000222 4F                  <1> 	dec di
    27                              <1> 
    28 00000223 8B5E0C              <1> 	mov bx,word[bp+12] ;//bx = flag
    29                              <1> 
    30                              <1> 	;--------------
    31                              <1> 	;≈–∂œ «∑Ò «”–∑˚∫≈ ˝
    32                              <1> 	;--------------
    33 00000226 F7C30100            <1> 	test bx,0b0001   ;//(bx&0x01) »Áπ˚◊Ó∫Û“ªŒª «1,Àµ√˜ «¥¯∑˚∫≈µƒ
    34 0000022A 7408                <1> .10Q: je .10E       
    35 0000022C 83F800              <1> 	 cmp ax,0        ;//»Áπ˚ ax < 0
    36 0000022F 7D03                <1> .12Q: jge  .12E
    37 00000231 83CB02              <1> 	or   bx,0b0010  ;//±Ì æ∑˚∫≈
    38                              <1> .12E:
    39                              <1> .10E:
    40                              <1> 
    41                              <1> 
    42                              <1> 	;-------------------
    43                              <1> 	;≈–∂® ‰≥ˆ ≤√¥∑˚∫≈
    44                              <1> 	;--------------------
    45 00000234 F7C30200            <1> 	test bx,0b0010 ;//(bx&0x02) »Áπ˚ «≤ª «0,‘ÚÀµ√˜–Ë“™…Ë÷√∑˚∫≈
    46 00000238 7410                <1> .20Q: je .20E
    47 0000023A 83F800              <1> 	 cmp ax,0
    48 0000023D 7D07                <1> .22Q: jge .22F
    49 0000023F F7D8                <1> 	neg ax
    50 00000241 C6042D              <1> 	mov [si],byte'-'
    51 00000244 EB03                <1> 	jmp .22E
    52                              <1> .22F:
    53                              <1> 
    54 00000246 C6042B              <1> 	mov  [si],byte'+'
    55                              <1> .22E:
    56 00000249 49                  <1> 	dec cx   ;//size--
    57                              <1> 
    58                              <1> .20E:
    59                              <1> 
    60                              <1> 	;---------------------
    61                              <1> 	;ASCII±‰ªª
    62                              <1> 	;--------------------
    63 0000024A 8B5E0A              <1> 	mov bx,[bp+10] ;//BX = ª˘ ˝
    64                              <1> .30L:
    65                              <1> 	
    66 0000024D BA0000              <1> 	mov dx,0
    67 00000250 F7F3                <1> 	div bx      ;//dx = AX%ª˘ ˝
    68                              <1> 				;//ax = AX/ª˘ ˝
    69 00000252 89D6                <1> 	mov si,dx
    70 00000254 8A94[7C02]          <1> 	mov dl,byte[.ascii+si] ;//dl = ASCII[DX]
    71                              <1> 
    72 00000258 8815                <1> 	mov [di],dl  ;//*dst = dl
    73                              <1> 
    74 0000025A 4F                  <1> 	dec di		; dst--;
    75                              <1> 
    76 0000025B 83F800              <1> 	cmp ax,0             ;
    77 0000025E E0ED                <1> 	loopnz .30L   ;//while(ax)
    78                              <1> .30E:
    79                              <1> 	
    80                              <1> 	;-------------------
    81                              <1> 	;ÃÓ¬˙ªªª∫¥Ê £”‡ø’∏Ò
    82                              <1> 	;-------------------
    83                              <1> 
    84 00000260 83F900              <1> 	cmp cx,0  ;//»Áπ˚√ª”–ª∫¥Ê £”‡‘ÚÕÍ≥…
    85 00000263 740D                <1> .40Q: je   .40E
    86 00000265 B020                <1> 	  mov  al,' ' ;//ø’◊÷∑˚ÃÓ≥‰
    87 00000267 837E0C04            <1> 	  cmp [bp+12],word 0b0100 
    88 0000026B 7502                <1> .42Q jne .42E
    89 0000026D B030                <1> 	 mov al,'0'  ;// ”√0ÃÓ≥‰
    90                              <1> .42E:
    91 0000026F FD                  <1> 	std       ;//DF = 1 (µÿ÷∑µ›ºı)
    92 00000270 F3AA                <1> 	rep stosb    ;//while(--CX) *DI-- = al;
    93                              <1> .40E:
    94                              <1> 
    95 00000272 5F                  <1> 	pop di
    96 00000273 5E                  <1> 	pop si
    97 00000274 5A                  <1> 	pop dx
    98 00000275 59                  <1> 	pop cx
    99 00000276 5B                  <1> 	pop bx
   100 00000277 58                  <1> 	pop ax
   101                              <1> 
   102 00000278 89EC                <1> 	mov sp,bp
   103 0000027A 5D                  <1> 	pop bp
   104                              <1> 
   105 0000027B C3                  <1> 	ret
   106                              <1> 
   107 0000027C 303132333435363738- <1> .ascii db "0123456789ABCDEF"
   107 00000285 39414243444546      <1>
   114                                  %include "..\modules\real\get_drive_param.s"
     1                              <1> get_drive_param:
     2                              <1> 	
     3                              <1> 
     4                              <1> 
     5 0000028C 55                  <1> 	push bp
     6 0000028D 89E5                <1> 	mov bp,sp
     7                              <1> 
     8                              <1> 
     9 0000028F 53                  <1> 	push bx
    10 00000290 51                  <1> 	push cx
    11 00000291 06                  <1> 	push es
    12 00000292 56                  <1> 	push si
    13 00000293 57                  <1> 	push di
    14                              <1> 
    15                              <1> 
    16                              <1> 
    17 00000294 8B7604              <1> 	mov si,[bp+4]
    18                              <1> 
    19 00000297 B80000              <1> 	mov ax,0   ;//Disk Base Table Pointer§Œ≥ı∆⁄ªØ
    20 0000029A 8EC0                <1> 	mov es,ax
    21 0000029C 89C7                <1> 	mov di,ax  
    22                              <1> 
    23 0000029E B408                <1> 	mov ah,8 ;//»°µ√drive parameters
    24 000002A0 8A14                <1> 	mov dl,[si+drive.no] ;//dl = drive∫≈
    25 000002A2 CD13                <1> 	int 0x13
    26 000002A4 721B                <1> .10Q: jc   .10F
    27                              <1> .10T:
    28 000002A6 88C8                <1> 	mov al,cl
    29 000002A8 83E03F              <1> 	and ax,0x3F ;//◊ÓµÕ¡˘Œª
    30                              <1> 
    31 000002AB C0E906              <1> 	shr  cl,6;    CX = cylinder ˝
    32 000002AE C1C908              <1> 	ror cx,8;	
    33 000002B1 41                  <1> 	inc cx ;	cylinder¥”1º∆ ˝
    34                              <1> 
    35 000002B2 0FB6DE              <1> 	movzx bx,dh     ;bx = head ˝
    36 000002B5 43                  <1> 	inc bx			
    37                              <1> 
    38 000002B6 894C02              <1> 	mov  [si+drive.cyln],cx
    39 000002B9 895C04              <1> 	mov  [si+drive.head],bx
    40 000002BC 894406              <1> 	mov  [si+drive.sect],ax
    41                              <1> 
    42 000002BF EB03                <1> 	jmp .10E
    43                              <1> .10F:
    44 000002C1 B80000              <1> 	mov ax,0
    45                              <1> .10E:
    46 000002C4 5F                  <1> 	pop di
    47 000002C5 5E                  <1> 	pop si
    48 000002C6 07                  <1> 	pop es
    49 000002C7 59                  <1> 	pop cx
    50 000002C8 5B                  <1> 	pop bx
    51                              <1> 
    52 000002C9 89EC                <1> 	mov sp,bp
    53 000002CB 5D                  <1> 	pop bp
    54                              <1> 
    55 000002CC C3                  <1> 	ret
   115                                  %include "..\modules\real\get_font_adr.s"
     1                              <1> get_font_adr:
     2                              <1> 	
     3 000002CD 55                  <1> 	push bp
     4 000002CE 89E5                <1> 	mov bp,sp
     5                              <1> 
     6 000002D0 50                  <1> 	push ax
     7 000002D1 53                  <1> 	push bx
     8 000002D2 56                  <1> 	push si
     9 000002D3 06                  <1> 	push es
    10 000002D4 55                  <1> 	push bp
    11                              <1> 
    12                              <1> 
    13 000002D5 8B7604              <1> 	mov si,[bp + 4]
    14                              <1> 
    15 000002D8 B83011              <1> 	mov ax,0x1130 ;//ªÒ»°font address 
    16 000002DB B706                <1> 	mov bh,0x06	  ;//8x16
    17 000002DD CD10                <1> 	int 10h       ;//±£¥Ê‘⁄ES:BP÷–
    18                              <1> 
    19                              <1> 	;//±£¥Êfont address
    20 000002DF 8C04                <1> 	mov [si + 0],es
    21 000002E1 896C02              <1> 	mov [si + 2],bp
    22                              <1> 
    23 000002E4 5D                  <1> 	pop		bp
    24 000002E5 07                  <1> 	pop		es
    25 000002E6 5E                  <1> 	pop		si
    26 000002E7 5B                  <1> 	pop		bx
    27 000002E8 58                  <1> 	pop		ax
    28                              <1> 
    29 000002E9 89EC                <1> 	mov sp,bp
    30 000002EB 5D                  <1> 	pop bp
    31                              <1> 
    32 000002EC C3                  <1> 	ret
   116                                  %include "..\modules\real\get_mem_info.s"
     1                              <1> get_mem_info:
     2 000002ED 6650                <1> 	push eax
     3 000002EF 6653                <1> 	push ebx
     4 000002F1 6651                <1> 	push ecx
     5 000002F3 6652                <1> 	push edx
     6 000002F5 56                  <1> 	push si
     7 000002F6 57                  <1> 	push di
     8 000002F7 55                  <1> 	push bp
     9                              <1> 
    10 000002F8 68[8303]E8A6FD83C4- <1> 	cdecl puts,.s0
    10 00000300 02                  <1>
    11                              <1> 
    12 00000301 BD0000              <1> 	mov bp,0			;//lines = 0
    13 00000304 66BB00000000        <1> 	mov ebx,0			;//index = 0
    14                              <1> 
    15                              <1> .10L:
    16                              <1> 	;//cdecl puts,.s0
    17 0000030A 66B820E80000        <1> 	mov eax,0x0000E820
    18 00000310 66B914000000        <1> 	mov ecx,E820_RECORD_SIZE ;//ECX = –Ë“™µƒbyte ˝
    19 00000316 66BA50414D53        <1> 	mov edx, 'PAMS' ;//EDX = 'SMAP'
    20 0000031C BF[1004]            <1> 	mov di,.b0      ;//ES:DI = buffer
    21 0000031F CD15                <1> 	int 0x15
    22                              <1> 
    23 00000321 663D50414D53        <1> 	cmp eax,'PAMS'
    24 00000327 7402                <1> 	je     .12E
    25 00000329 EB4C                <1> 	jmp    .10E	;//»Áπ˚≤ª÷ß≥÷SMAP‘ÚÕÀ≥ˆ
    26                              <1> 
    27                              <1> .12E:
    28                              <1> 
    29 0000032B 7302                <1> 	jnc .14E	;//»Áπ˚≥ˆŒ Ã‚¡ÀCFª·±ªset
    30 0000032D EB48                <1> 	jmp .10E	
    31                              <1> 
    32                              <1> .14E:
    33                              <1> 	
    34 0000032F 57E8F10083C402      <1> 	cdecl put_mem_info, di	;//¥Ú”°–≈œ¢
    35                              <1> 
    36 00000336 668B4510            <1> 	mov eax,[di + 16]		;//eax = record type 
    37 0000033A 6683F803            <1> 	cmp eax,3				;//if(3 == eax) ACPI data
    38 0000033E 750F                <1> 	jne .15E
    39                              <1> 
    40 00000340 668B05              <1> 	mov eax,[di + 0]		; EAX = BASE ADDRESS
    41 00000343 66A3[0402]          <1> 	mov [ACPI_DATA.adr],eax ; ACPI_DATA.adr = EAX
    42                              <1> 
    43 00000347 668B4508            <1> 	mov eax,[di + 8]		;EAX = length
    44 0000034B 66A3[0802]          <1> 	mov [ACPI_DATA.len],eax ; ACPI_DATA.len = EAX
    45                              <1> .15E:
    46 0000034F 6683FB00            <1> 	cmp ebx,0			;//if(ebx != 0)
    47 00000353 741C                <1> 	jz .16E
    48                              <1> 
    49 00000355 45                  <1> 	inc bp
    50 00000356 83E507              <1> 	and bp,0x07			;//line√ø8∏ˆ√¸¡Ó–Ë“™”√ªß∞¥œ¬ªÿ≥µºÃ–¯
    51 00000359 7516                <1> 	jnz .16E			;//if(lines == 0)	inc bp				;//lines++
    52                              <1> 
    53                              <1> 
    54 0000035B 68[F603]E843FD83C4- <1> 	cdecl puts,.s2		;//÷–∂œ√¸¡Ó
    54 00000363 02                  <1>
    55                              <1> 
    56 00000364 B410                <1> 	mov ah,0x10			;//µ»¥˝keyboard ‰»Î
    57 00000366 CD16                <1> 	int 0x16
    58                              <1> 
    59 00000368 68[0104]E836FD83C4- <1> 	cdecl puts,.s3		;//…æ≥˝÷–∂œ–≈œ¢
    59 00000370 02                  <1>
    60                              <1> 
    61                              <1> .16E:
    62 00000371 6683FB00            <1> 	cmp ebx,0
    63 00000375 7593                <1> 	jne .10L
    64                              <1> .10E:
    65 00000377 5D                  <1> 	pop bp
    66 00000378 5F                  <1> 	pop di
    67 00000379 5E                  <1> 	pop si
    68 0000037A 665A                <1> 	pop edx
    69 0000037C 6659                <1> 	pop ecx
    70 0000037E 665B                <1> 	pop ebx
    71 00000380 6658                <1> 	pop eax
    72 00000382 C3                  <1> 	ret;
    73                              <1> 
    74 00000383 2045383230204D656D- <1> .s0:	db " E820 Memory Map:", 0x0A, 0x0D
    74 0000038C 6F7279204D61703A0A- <1>
    74 00000395 0D                  <1>
    75 00000396 20426173655F5F5F5F- <1> 		db " Base_____________ Length___________ Type____", 0x0A, 0x0D, 0
    75 0000039F 5F5F5F5F5F5F5F5F5F- <1>
    75 000003A8 204C656E6774685F5F- <1>
    75 000003B1 5F5F5F5F5F5F5F5F5F- <1>
    75 000003BA 20547970655F5F5F5F- <1>
    75 000003C3 0A0D00              <1>
    76 000003C6 202D2D2D2D2D2D2D2D- <1> .s1:	db " ----------------- ----------------- --------", 0x0A, 0x0D, 0
    76 000003CF 2D2D2D2D2D2D2D2D2D- <1>
    76 000003D8 202D2D2D2D2D2D2D2D- <1>
    76 000003E1 2D2D2D2D2D2D2D2D2D- <1>
    76 000003EA 202D2D2D2D2D2D2D2D- <1>
    76 000003F3 0A0D00              <1>
    77 000003F6 203C6D6F72652E2E2E- <1> .s2:	db " <more...>", 0
    77 000003FF 3E00                <1>
    78 00000401 0D2020202020202020- <1> .s3:	db 0x0D, "          ", 0x0D, 0
    78 0000040A 20200D00            <1>
    79                              <1> 
    80 0000040E 00<rept>            <1> ALIGN 4, db 0
    81 00000410 00<rept>            <1> .b0:	times E820_RECORD_SIZE db 0
    82                              <1> 
    83                              <1> put_mem_info:
    84 00000424 55                  <1> 	push bp
    85 00000425 89E5                <1> 	mov bp,sp
    86                              <1> 
    87 00000427 53                  <1> 	push bx
    88 00000428 56                  <1> 	push si
    89                              <1> 
    90                              <1> 	;----------------
    91                              <1> 	;ªÒµ√≤Œ ˝
    92                              <1> 	;----------------
    93 00000429 8B7604              <1> 	mov si,[bp + 4] ;//buffer_address
    94                              <1> 	;Base(64bit)
    95 0000042C 6A046A106A0468-     <1> 	cdecl itoa,word[si + 6],.p2+0,4,16,0b0100
    95 00000433 [0305]FF7406E8D1FD- <1>
    95 0000043B 83C40A              <1>
    96 0000043E 6A046A106A0468-     <1> 	cdecl itoa,word[si + 4],.p2+4,4,16,0b0100
    96 00000445 [0705]FF7404E8BFFD- <1>
    96 0000044D 83C40A              <1>
    97 00000450 6A046A106A0468-     <1> 	cdecl itoa,word[si + 2],.p3+0,4,16,0b0100
    97 00000457 [0C05]FF7402E8ADFD- <1>
    97 0000045F 83C40A              <1>
    98 00000462 6A046A106A0468-     <1> 	cdecl itoa,word[si + 0],.p3+4,4,16,0b0100
    98 00000469 [1005]FF34E89CFD83- <1>
    98 00000471 C40A                <1>
    99                              <1> 	;Length(64bit)
   100 00000473 6A046A106A0468-     <1> 	cdecl itoa,word[si + 14],.p4+0,4,16,0b0100
   100 0000047A [1505]FF740EE88AFD- <1>
   100 00000482 83C40A              <1>
   101 00000485 6A046A106A0468-     <1> 	cdecl itoa,word[si + 12],.p4+4,4,16,0b0100
   101 0000048C [1905]FF740CE878FD- <1>
   101 00000494 83C40A              <1>
   102 00000497 6A046A106A0468-     <1> 	cdecl itoa,word[si + 10],.p5+0,4,16,0b0100
   102 0000049E [1E05]FF740AE866FD- <1>
   102 000004A6 83C40A              <1>
   103 000004A9 6A046A106A0468-     <1> 	cdecl itoa,word[si + 8] ,.p5+4,4,16,0b0100
   103 000004B0 [2205]FF7408E854FD- <1>
   103 000004B8 83C40A              <1>
   104                              <1> 	;Type(32bit)
   105 000004BB 6A046A106A0468-     <1> 	cdecl itoa,word[si + 18],.p4+0,4,16,0b0100
   105 000004C2 [1505]FF7412E842FD- <1>
   105 000004CA 83C40A              <1>
   106 000004CD 6A046A106A0468-     <1> 	cdecl itoa,word[si + 16],.p4+0,4,16,0b0100
   106 000004D4 [1505]FF7410E830FD- <1>
   106 000004DC 83C40A              <1>
   107                              <1> 
   108 000004DF 68[0205]E8BFFB83C4- <1> 	cdecl puts,.s1 ;//œ‘ ærecord–≈œ¢
   108 000004E7 02                  <1>
   109                              <1> 
   110                              <1> 
   111 000004E8 8B5C10              <1> mov bx,[si+16]			;//typeµƒ◊÷∑˚¥Æ±Ì æ
   112 000004EB 83E307              <1> and bx,0x07				;BX = Type(0~5)
   113 000004EE D1E3                <1> shl bx,1				;BX *= 2
   114 000004F0 81C3[8405]          <1> add bx,.t0				;BX += .t0 ;//º”…œtableµƒµÿ÷∑
   115 000004F4 FF37E8ABFB83C402    <1> cdecl puts,word[bx]
   116                              <1> 
   117 000004FC 5E                  <1> pop si
   118 000004FD 5B                  <1> pop bx
   119                              <1> 
   120 000004FE 89EC                <1> mov sp,bp
   121 00000500 5D                  <1> pop bp
   122                              <1> 
   123 00000501 C3                  <1> ret;
   124                              <1> 
   125 00000502 20                  <1> .s1:	db " "
   126 00000503 5A5A5A5A5A5A5A5A5F  <1> .p2:	db "ZZZZZZZZ_"
   127 0000050C 5A5A5A5A5A5A5A5A20  <1> .p3:	db "ZZZZZZZZ "
   128 00000515 5A5A5A5A5A5A5A5A5F  <1> .p4:	db "ZZZZZZZZ_"
   129 0000051E 5A5A5A5A5A5A5A5A20  <1> .p5:	db "ZZZZZZZZ "
   130 00000527 5A5A5A5A5A5A5A5A00  <1> .p6:	db "ZZZZZZZZ",0
   131                              <1> 
   132 00000530 2028556E6B6E6F776E- <1> .s4:	db " (Unknown)", 0x0A, 0x0D, 0
   132 00000539 290A0D00            <1>
   133 0000053D 2028757361626C6529- <1> .s5:	db " (usable)", 0x0A, 0x0D, 0
   133 00000546 0A0D00              <1>
   134 00000549 202872657365727665- <1> .s6:	db " (reserved)", 0x0A, 0x0D, 0
   134 00000552 64290A0D00          <1>
   135 00000557 202841435049206461- <1> .s7:	db " (ACPI data)", 0x0A, 0x0D, 0
   135 00000560 7461290A0D00        <1>
   136 00000566 202841435049204E56- <1> .s8:	db " (ACPI NVS)", 0x0A, 0x0D, 0
   136 0000056F 53290A0D00          <1>
   137 00000574 2028626164206D656D- <1> .s9:	db " (bad memory)", 0x0A, 0x0D, 0
   137 0000057D 6F7279290A0D00      <1>
   138                              <1> 
   139 00000584 [3005][3D05][4905]- <1> .t0:	dw .s4, .s5, .s6, .s7, .s8, .s9, .s4, .s4
   139 0000058A [5705][6605][7405]- <1>
   139 00000590 [3005][3005]        <1>
   117                                  %include "..\modules\real\kbc.s"
     1                              <1> KBC_Data_Write:
     2                              <1> 
     3 00000594 55                  <1> 		push	bp								
     4 00000595 89E5                <1> 		mov		bp, sp							
     5                              <1> 
     6                              <1> 	
     7 00000597 51                  <1> 		push	cx
     8                              <1> 
     9 00000598 B90000              <1> 		mov		cx, 0							; CX = 0; 
    10                              <1> .10L:											; do
    11                              <1> 												; {
    12 0000059B E464                <1> 		in		al, 0x64						;   AL = inp(0x64);
    13 0000059D A802                <1> 		test    al, 0x02						;   ZF = AL & 0x02;
    14 0000059F E0FA                <1> 		loopnz	.10L							; } while (--CX && !ZF);
    15                              <1> 												; 
    16 000005A1 83F900              <1> 		cmp		cx, 0							; if (CX)
    17 000005A4 7405                <1> 		jz		.20E							; {
    18                              <1> 												;   
    19 000005A6 8A4604              <1> 		mov		al, [bp + 4]					; 
    20 000005A9 E660                <1> 		out    	0x60, al						;   outp(0x60, AL);
    21                              <1> .20E:											; }
    22                              <1> 												; 
    23 000005AB 89C8                <1> 		mov		ax, cx							; return CX;
    24                              <1> 
    25 000005AD 59                  <1> 		pop		cx
    26                              <1> 
    27 000005AE 89EC                <1> 		mov		sp, bp
    28 000005B0 5D                  <1> 		pop		bp
    29                              <1> 
    30 000005B1 C3                  <1> 		ret
    31                              <1> 
    32                              <1> 
    33                              <1> KBC_Data_Read:
    34                              <1> 	
    35                              <1> 												
    36 000005B2 55                  <1> 		push	bp								
    37 000005B3 89E5                <1> 		mov		bp, sp							
    38                              <1> 
    39                              <1> 	
    40 000005B5 51                  <1> 		push	cx
    41 000005B6 57                  <1> 		push	di
    42                              <1> 
    43                              <1> 	
    44 000005B7 B90000              <1> 		mov		cx, 0							; CX = 0;
    45                              <1> .10L:											; do
    46                              <1> 												; {
    47 000005BA E464                <1> 		in		al, 0x64						;   AL = inp(0x64);
    48 000005BC A801                <1> 		test    al, 0x01						;   ZF = AL & 0x01; 
    49 000005BE E1FA                <1> 		loopz	.10L							; } while (--CX && ZF);
    50                              <1> 												;   
    51 000005C0 83F900              <1> 		cmp		cx, 0							; if (CX) 
    52 000005C3 7409                <1> 		jz		.20E							; {
    53                              <1> 												;   
    54 000005C5 B400                <1> 		mov		ah, 0x00						;   AH = 0x00;
    55 000005C7 E460                <1> 		in     	al, 0x60						;   AL = inp(0x60);
    56                              <1> 												;   
    57 000005C9 8B7E04              <1> 		mov		di, [bp + 4]					;   DI    = adr;
    58 000005CC 8905                <1> 		mov		[di + 0], ax					;   DI[0] = AX;
    59                              <1> .20E:											; }
    60                              <1> 												; 
    61 000005CE 89C8                <1> 		mov		ax, cx							; return CX;
    62                              <1> 
    63                              <1> 	
    64 000005D0 5F                  <1> 		pop		di
    65 000005D1 59                  <1> 		pop		cx
    66                              <1> 
    67                              <1> 
    68 000005D2 89EC                <1> 		mov		sp, bp
    69 000005D4 5D                  <1> 		pop		bp
    70                              <1> 
    71 000005D5 C3                  <1> 		ret
    72                              <1> 
    73                              <1> KBC_Cmd_Write:
    74                              <1> 
    75                              <1> 												
    76                              <1> 											
    77 000005D6 55                  <1> 		push	bp							
    78 000005D7 89E5                <1> 		mov		bp, sp							
    79                              <1> 
    80                              <1> 	
    81 000005D9 51                  <1> 		push	cx
    82                              <1> 
    83                              <1> 	
    84 000005DA B90000              <1> 		mov		cx, 0							
    85                              <1> .10L:											
    86                              <1> 											
    87 000005DD E464                <1> 		in		al, 0x64					
    88 000005DF A802                <1> 		test    al, 0x02						
    89 000005E1 E0FA                <1> 		loopnz	.10L							
    90                              <1> 												
    91 000005E3 83F900              <1> 		cmp		cx, 0							
    92 000005E6 7405                <1> 		jz		.20E							
    93                              <1> 												
    94 000005E8 8A4604              <1> 		mov		al, [bp + 4]					
    95 000005EB E664                <1> 		out    	0x64, al						
    96                              <1> .20E:											
    97                              <1> 
    98 000005ED 89C8                <1> 		mov		ax, cx							
    99                              <1> 
   100 000005EF 59                  <1> 		pop		cx
   101                              <1> 
   102 000005F0 89EC                <1> 		mov		sp, bp
   103 000005F2 5D                  <1> 		pop		bp
   104                              <1> 
   105 000005F3 C3                  <1> 		ret
   106                              <1> 
   118                                  %include "..\modules\real\read_lba.s"
     1                              <1> lba_chs:
     2                              <1> 
     3 000005F4 55                  <1> 	push	bp
     4 000005F5 89E5                <1> 	mov		bp, sp
     5                              <1> 	
     6 000005F7 50                  <1> 	push	ax
     7 000005F8 53                  <1> 	push	bx
     8 000005F9 52                  <1> 	push	dx
     9 000005FA 56                  <1> 	push	si
    10 000005FB 57                  <1> 	push	di
    11                              <1> 
    12 000005FC 8B7604              <1> 	mov		si, [bp + 4] ;//si  = drive
    13 000005FF 8B7E06              <1> 	mov		di, [bp + 6] ;//di = drv_chs
    14                              <1> 
    15 00000602 8A4404              <1> 	mov al,[si + drive.head] ;//AL = maxhead
    16 00000605 F66406              <1> 	mul byte[si+drive.sect]	 ;//AL = maxhead * maxsector
    17 00000608 89C3                <1> 	mov bx,ax			;//BX = √ø∏ˆcylinderµƒsector ˝
    18                              <1> 
    19 0000060A BA0000              <1> 	mov dx,0
    20 0000060D 8B4608              <1> 	mov ax,[bp + 8]
    21 00000610 F7F3                <1> 	div bx  ;//DX = AX%BX
    22                              <1> 			;//AX = AX/BX
    23 00000612 894502              <1> 	mov [di+drive.cyln],ax   ;drv_ch.cyln = cylinder∑¨∫≈
    24                              <1> 
    25 00000615 89D0                <1> 	mov ax,dx
    26 00000617 F67406              <1> 	div byte[si + drive.sect]    ;AH = AX % maxsector
    27                              <1> 								 ;al = ax / maxsector
    28 0000061A 0FB6D4              <1> 	movzx dx , ah
    29 0000061D 42                  <1> 	inc dx
    30                              <1> 
    31 0000061E B400                <1> 	mov ah,0x00
    32                              <1> 
    33 00000620 894504              <1> 	mov [di + drive.head],ax
    34 00000623 895506              <1> 	mov [di + drive.sect],dx 
    35                              <1> 
    36 00000626 5F                  <1> 	pop di
    37 00000627 5E                  <1> 	pop si
    38 00000628 5A                  <1> 	pop dx
    39 00000629 5B                  <1> 	pop bx
    40 0000062A 58                  <1> 	pop ax
    41                              <1> 
    42 0000062B 89EC                <1> 	mov sp,bp
    43 0000062D 5D                  <1> 	pop bp
    44 0000062E C3                  <1> 	ret
    45                              <1> 
    46                              <1> read_lba:
    47                              <1> 											
    48 0000062F 55                  <1> 		push	bp							
    49 00000630 89E5                <1> 		mov		bp, sp			
    50                              <1> 
    51                              <1> 		
    52 00000632 56                  <1> 		push	si
    53                              <1> 
    54 00000633 8B7604              <1> 		mov		si, [bp + 4]					; SI = drive–≈œ¢
    55                              <1> 		;------------------
    56                              <1> 		;Ω´lba÷∏∂®±‰Œ™chs÷∏∂®
    57                              <1> 		;------------------
    58 00000636 8B4606              <1> 		mov		ax, [bp + 6]					; AX = LBA;
    59 00000639 5068[5E06]56E8B3FF- <1> 		cdecl	lba_chs, si, .chs, ax			; lba_chs(drive, .chs, AX);
    59 00000641 83C406              <1>
    60                              <1> 
    61                              <1> 		;---------------------------------------
    62                              <1> 		; drive numberµƒøΩ±¥
    63                              <1> 		;---------------------------------------
    64 00000644 8A04                <1> 		mov		al, [si + drive.no]				; 
    65 00000646 A2[5E06]            <1> 		mov		[.chs + drive.no], al			; drive number
    66                              <1> 
    67                              <1> 		;---------------------------------------
    68                              <1> 		; ∂¡»°sector
    69                              <1> 		;---------------------------------------
    70 00000649 FF760AFF760868-     <1> 		cdecl	read_chs, .chs, word [bp + 8], word [bp +10] ;AX = read_chs(.chs, sector ˝, ofs);
    70 00000650 [5E06]E8ADFA83C406  <1>
    71                              <1> 
    72 00000658 5E                  <1> 		pop		si
    73                              <1> 
    74 00000659 89EC                <1> 		mov		sp, bp
    75 0000065B 5D                  <1> 		pop		bp
    76                              <1> 
    77 0000065C C3                  <1> 		ret
    78                              <1> 
    79 0000065D 90                  <1> ALIGN 2
    80 0000065E 00<rept>            <1> .chs:	times drive_size	db	0				;∂¡»°µƒsectorµƒ«È±®
   119                                  %include "..\modules\real\memcpy.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ÉÅÉÇÉäÇÃÉRÉsÅ[
     3                              <1> ;========================================================================
     4                              <1> ;Å°èëéÆ		: void memcpy(dst, src, size);
     5                              <1> ;
     6                              <1> ;Å°à¯êî
     7                              <1> ;	dst		: ÉRÉsÅ[êÊ
     8                              <1> ;	src		: ÉRÉsÅ[å≥
     9                              <1> ;	size	: ÉoÉCÉgêî
    10                              <1> ;
    11                              <1> ;Å°ñﬂÇËíl	: ñ≥Çµ
    12                              <1> ;************************************************************************
    13                              <1> memcpy:
    14                              <1> 		;---------------------------------------
    15                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃç\ízÅz
    16                              <1> 		;---------------------------------------
    17                              <1> 												; ------|--------
    18                              <1> 												;  BP+ 8| ÉoÉCÉgêî
    19                              <1> 												;  BP+ 6| ÉRÉsÅ[å≥
    20                              <1> 												;  BP+ 4| ÉRÉsÅ[êÊ
    21                              <1> 												; ------|--------
    22 00000666 55                  <1> 		push	bp								;  BP+ 2| IPÅiñﬂÇËî‘ínÅj
    23 00000667 89E5                <1> 		mov		bp, sp							;  BP+ 0| BPÅiå≥ÇÃílÅj
    24                              <1> 												; ------+--------
    25                              <1> 		;---------------------------------------
    26                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃï€ë∂Åz
    27                              <1> 		;---------------------------------------
    28 00000669 51                  <1> 		push	cx
    29 0000066A 56                  <1> 		push	si
    30 0000066B 57                  <1> 		push	di
    31                              <1> 
    32                              <1> 		;---------------------------------------
    33                              <1> 		; ÉRÉsÅ[ï˚å¸ÇåàíË
    34                              <1> 		;---------------------------------------
    35 0000066C FC                  <1> 		cld										; DF = 0; // +ï˚å¸
    36 0000066D 8B7E04              <1> 		mov		di, [bp + 4]					; DI = ÉRÉsÅ[êÊ;
    37 00000670 8B7606              <1> 		mov		si, [bp + 6]					; SI = ÉRÉsÅ[å≥;
    38 00000673 8B4E08              <1> 		mov		cx, [bp + 8]					; CX = ÉoÉCÉgêî;
    39                              <1> 
    40                              <1> 		;---------------------------------------
    41                              <1> 		; ÉoÉCÉgíPà Ç≈ÇÃÉRÉsÅ[
    42                              <1> 		;---------------------------------------
    43 00000676 F3A4                <1> 		rep movsb								; while (*DI++ = *SI++) ;
    44                              <1> 
    45                              <1> 		;---------------------------------------
    46                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃïúãAÅz
    47                              <1> 		;---------------------------------------
    48 00000678 5F                  <1> 		pop		di
    49 00000679 5E                  <1> 		pop		si
    50 0000067A 59                  <1> 		pop		cx
    51                              <1> 
    52                              <1> 		;---------------------------------------
    53                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃîjä¸Åz
    54                              <1> 		;---------------------------------------
    55 0000067B 89EC                <1> 		mov		sp, bp
    56 0000067D 5D                  <1> 		pop		bp
    57                              <1> 
    58 0000067E C3                  <1> 		ret
    59                              <1> 
   120                                  %include "..\modules\real\memcmp.s"
     1                              <1> ;************************************************************************
     2                              <1> ;	ÉÅÉÇÉäÇÃî‰är
     3                              <1> ;========================================================================
     4                              <1> ;Å°èëéÆ		: WORD memcmp(src0, src1, size);
     5                              <1> ;
     6                              <1> ;Å°à¯êî
     7                              <1> ;	src0	: î‰ärÉAÉhÉåÉX0
     8                              <1> ;	src1	: î‰ärÉAÉhÉåÉX1
     9                              <1> ;	size	: ÉoÉCÉgêî
    10                              <1> ;
    11                              <1> ;Å°ñﬂÇËíl	: àÍív(0)ÅAïsàÍív(0à»äO)
    12                              <1> ;************************************************************************
    13                              <1> memcmp:
    14                              <1> 		;---------------------------------------
    15                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃç\ízÅz
    16                              <1> 		;---------------------------------------
    17                              <1> 												; ------|--------
    18                              <1> 												;  BP+ 8| ÉoÉCÉgêî
    19                              <1> 												;  BP+ 6| ÉAÉhÉåÉX2
    20                              <1> 												;  BP+ 4| ÉAÉhÉåÉX1
    21                              <1> 												; ------|--------
    22 0000067F 55                  <1> 		push	bp								;  BP+ 2| IPÅiñﬂÇËî‘ínÅj
    23 00000680 89E5                <1> 		mov		bp, sp							;  BP+ 0| BPÅiå≥ÇÃílÅj
    24                              <1> 												; ------+--------
    25                              <1> 		;---------------------------------------
    26                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃï€ë∂Åz
    27                              <1> 		;---------------------------------------
    28 00000682 53                  <1> 		push	bx
    29 00000683 51                  <1> 		push	cx
    30 00000684 52                  <1> 		push	dx
    31 00000685 56                  <1> 		push	si
    32 00000686 57                  <1> 		push	di
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; à¯êîÇÃéÊìæ
    36                              <1> 		;---------------------------------------
    37 00000687 FC                  <1> 		cld										; // DFÉNÉäÉAÅi+ï˚å¸Åj
    38 00000688 8B7604              <1> 		mov		si, [bp + 4]					; // ÉAÉhÉåÉX1
    39 0000068B 8B7E06              <1> 		mov		di, [bp + 6]					; // ÉAÉhÉåÉX2
    40 0000068E 8B4E08              <1> 		mov		cx, [bp + 8]					; // ÉoÉCÉgêî
    41                              <1> 
    42                              <1> 		;---------------------------------------
    43                              <1> 		; ÉoÉCÉgíPà Ç≈ÇÃî‰är
    44                              <1> 		;---------------------------------------
    45 00000691 F3A6                <1> 		repe cmpsb								; if (ZF = àŸÇ»ÇÈï∂éöñ≥Çµ)
    46 00000693 7505                <1> 		jnz		.10F							; {
    47 00000695 B80000              <1> 		mov		ax, 0							;   ret = 0; // àÍív
    48 00000698 EB03                <1> 		jmp		.10E							; }
    49                              <1> .10F:											; else
    50                              <1> 												; {
    51 0000069A B8FFFF              <1> 		mov		ax, -1							;   ret = -1; // ïsàÍív
    52                              <1> .10E:											; }
    53                              <1> 
    54                              <1> 		;---------------------------------------
    55                              <1> 		; ÅyÉåÉWÉXÉ^ÇÃïúãAÅz
    56                              <1> 		;---------------------------------------
    57 0000069D 5F                  <1> 		pop		di
    58 0000069E 5E                  <1> 		pop		si
    59 0000069F 5A                  <1> 		pop		dx
    60 000006A0 59                  <1> 		pop		cx
    61 000006A1 5B                  <1> 		pop		bx
    62                              <1> 
    63                              <1> 		;---------------------------------------
    64                              <1> 		; ÅyÉXÉ^ÉbÉNÉtÉåÅ[ÉÄÇÃîjä¸Åz
    65                              <1> 		;---------------------------------------
    66 000006A2 89EC                <1> 		mov		sp, bp
    67 000006A4 5D                  <1> 		pop		bp
    68                              <1> 
    69 000006A5 C3                  <1> 		ret
    70                              <1> 
   121                                  
   122                                  stage_2:
   123 000006A6 68[2007]E8F8F983C4-     	cdecl puts, .s0
   123 000006AE 02                 
   124                                  
   125                                  	;-----------------
   126                                  	;ÂèñÂæódriveÁöÑ‰ø°ÊÅØ
   127                                  	;---------------;
   128                                  
   129 000006AF 68[9C00]E8D7FB83C4-     	cdecl get_drive_param,BOOT ;(get_drive_param(DX,BOOT.CYLN))
   129 000006B7 02                 
   130 000006B8 83F800                  	cmp ax,0
   131 000006BB 750C                    .10Q: jne .10E
   132 000006BD 68[5107]E8E1F983C4-     .10T: cdecl puts,.e0
   132 000006C5 02                 
   133 000006C6 E8FAF9                  	call reboot
   134                                  .10E:
   135 000006C9 A1[9C00]                	mov ax,[BOOT + drive.no]
   136 000006CC 6A046A106A0268-         	cdecl itoa,ax,.p1,2,16,0b0100
   136 000006D3 [3807]50E833FB83C4-
   136 000006DB 0A                 
   137 000006DC A1[9E00]                	mov ax,[BOOT + drive.cyln]
   138 000006DF 6A046A106A0268-         	cdecl itoa,ax,.p2,2,16,0b0100
   138 000006E6 [3F07]50E820FB83C4-
   138 000006EE 0A                 
   139 000006EF A1[A000]                	mov ax,[BOOT + drive.head]
   140 000006F2 6A046A106A0268-         	cdecl itoa,ax,.p3,2,16,0b0100
   140 000006F9 [4607]50E80DFB83C4-
   140 00000701 0A                 
   141 00000702 A1[A200]                	mov ax,[BOOT + drive.sect]
   142 00000705 6A046A106A0268-         	cdecl itoa,ax,.p4,2,16,0b0100
   142 0000070C [4D07]50E8FAFA83C4-
   142 00000714 0A                 
   143                                  
   144 00000715 68[2F07]E889F983C4-     	cdecl puts, .s1
   144 0000071D 02                 
   145                                  
   146 0000071E EB4D                    	jmp stage_3rd
   147                                  
   148 00000720 326E64207374616765-     .s0 db "2nd stage...",0X0A,0x0D,0
   148 00000729 2E2E2E0A0D00       
   149                                  
   150 0000072F 2044726976653A3078      .s1 db " Drive:0x"
   151 00000738 202C20433A3078          .p1 db " , C:0x" 
   152 0000073F 202C20483A3078          .p2 db " , H:0x" 
   153 00000746 202C20533A3078          .p3 db " , S:0x" 
   154 0000074D 200A0D00                .p4 db " ", 0X0A,0X0D,0 
   155 00000751 43616E272074206765-     .e0 db "Can' t get drive parameter.", 0
   155 0000075A 742064726976652070-
   155 00000763 6172616D657465722E-
   155 0000076C 00                 
   156                                  
   157                                  ;**************************
   158                                  ;stage3
   159                                  ;**************************
   160                                  
   161                                  stage_3rd:
   162 0000076D 68[F907]E831F983C4-     	cdecl puts,.s0
   162 00000775 02                 
   163                                  	
   164 00000776 68[0002]E851FB83C4-     	cdecl get_font_adr,FONT
   164 0000077E 02                 
   165                                  
   166                                  	;------------
   167                                  	;//Ë°®Á§∫font address
   168                                  	;------------
   169                                  
   170 0000077F 6A046A106A0468-         	cdecl itoa, word[FONT.seg],.p1,4,16,0b0100
   170 00000786 [1508]FF36[0002]E8-
   170 0000078D 7DFA83C40A         
   171 00000792 6A046A106A0468-         	cdecl itoa, word[FONT.off],.p2,4,16,0b0100
   171 00000799 [1908]FF36[0202]E8-
   171 000007A0 6AFA83C40A         
   172                                  
   173 000007A5 68[0808]E8F9F883C4-     	cdecl puts ,.s1
   173 000007AD 02                 
   174                                  
   175                                  	;--------------------
   176                                  	;Ë°®Á§∫memory address
   177                                  	;--------------------
   178 000007AE 68[0402]E839FB83C4-     	cdecl get_mem_info,ACPI_DATA
   178 000007B6 02                 
   179 000007B7 68[F907]E8E7F883C4-     	cdecl puts ,.s0
   179 000007BF 02                 
   180                                  
   181 000007C0 66A1[0402]              	mov eax,[ACPI_DATA.adr]		;//EAX = ACPI_DATA.adr		
   182 000007C4 6683F800                	cmp eax,0					;//if(eax)
   183 000007C8 742D                    	je .10E
   184                                  	
   185 000007CA 6A046A106A0468-         	cdecl itoa,ax,.p4,4,16,0b0100	;//‰Ωé‰ΩçÂú∞ÂùÄËΩ¨Êç¢
   185 000007D1 [3108]50E835FA83C4-
   185 000007D9 0A                 
   186 000007DA 66C1E810                	shr eax,16
   187 000007DE 6A046A106A0468-         	cdecl itoa,ax,.p3,4,16,0b0100	;//	È´ò‰ΩçÂú∞ÂùÄËΩ¨Êç¢
   187 000007E5 [2D08]50E821FA83C4-
   187 000007ED 0A                 
   188                                  
   189 000007EE 68[2308]E8B0F883C4-     	cdecl puts ,.s2		;//ÊâìÂç∞Âú∞ÂùÄ
   189 000007F6 02                 
   190                                  
   191                                  .10E:
   192 000007F7 EB3F                    	jmp stage_4
   193                                  
   194                                  
   195 000007F9 337264207374616765-     .s0 db "3rd stage...",0x0A,0X0D,0
   195 00000802 2E2E2E0A0D00       
   196 00000808 466F6E742041646472-     .s1 db "Font Address="
   196 00000811 6573733D           
   197 00000815 5A5A5A5A                .p1 db "ZZZZ"
   198 00000819 5A5A5A5A0A0D00          .p2 db "ZZZZ",0x0A,0x0D,0
   199 00000820 0A0D00                  	db 0x0A,0X0D,0
   200                                  
   201 00000823 414350495F44415441-     .s2 db "ACPI_DATA="
   201 0000082C 3D                 
   202 0000082D 5A5A5A5A                .p3 db "ZZZZ"
   203 00000831 5A5A5A5A0A0D00          .p4 db "ZZZZ",0x0A,0x0D,0
   204                                  
   205                                  ;********************
   206                                  ;Á¨¨ÂõõÈò∂ÊÆµ
   207                                  ;********************
   208                                  
   209                                  stage_4:
   210                                  	
   211 00000838 68[0C09]E866F883C4-     	cdecl puts,.s0
   211 00000840 02                 
   212                                  
   213                                  	;-----------------
   214                                  	;A20 gateÁöÑÊúâÊïàÂåñ
   215                                  	;-----------------
   216                                  
   217 00000841 FA                      	cli					;//‰∏≠Êñ≠ËøõÂà∂
   218 00000842 68AD00E88EFD83C402      	cdecl KBC_Cmd_Write,0xAD ;//ÈîÆÁõòÊó†ÊïàÂåñ
   219                                  
   220 0000084B 68D000E885FD83C402      	cdecl KBC_Cmd_Write,0xD0	;//ËØªÂèñËæìÂá∫Á´ØÂè£ÁöÑÂëΩ‰ª§
   221 00000854 68[5209]E858FD83C4-     	cdecl KBC_Data_Read,.key	;//ËæìÂá∫Á´ØÂè£ÁöÑÊï∞ÊçÆËØªÂÖ•key
   221 0000085C 02                 
   222                                  
   223 0000085D 8A1E[5209]              	mov bl,[.key]	;BL = key
   224 00000861 80CB02                  	or bl,0x02		;BL |= 0x02 A20 gateÁöÑÊúâÊïàÂåñ
   225                                  
   226 00000864 68D100E86CFD83C402      	cdecl KBC_Cmd_Write,0xD1	;//ÂÜôÂÖ•ËæìÂá∫Á´ØÂè£ÁöÑÂëΩ‰ª§
   227 0000086D 53E823FD83C402          	cdecl KBC_Data_Write,bx     ;//ËæìÂá∫Á´ØÂè£Êï∞ÊçÆ
   228                                  
   229 00000874 68AE00E85CFD83C402      	cdecl KBC_Cmd_Write,0xAE ;//ÈîÆÁõòÊúâÊïàÂåñ
   230 0000087D FB                      	sti						;//ÂÖÅËÆ∏‰∏≠Êñ≠
   231                                  
   232 0000087E 68[1B09]E820F883C4-     	cdecl puts,.s1
   232 00000886 02                 
   233                                  
   234                                  	;-----------------
   235                                  	;ÈîÆÁõòledÊµãËØï
   236                                  	;-----------------
   237 00000887 68[2F09]E817F883C4-     	cdecl puts,.s2
   237 0000088F 02                 
   238                                  
   239 00000890 BB0000                  	mov bx,0          ;//bx = ledÁöÑÂàùÂßãÂÄº 0
   240                                  .10L:
   241                                  	
   242 00000893 B400                    	mov ah,0x00		;//Á≠âÂæÖÈîÆÁõòËæìÂÖ•
   243 00000895 CD16                    	int 0x16
   244                                  
   245 00000897 3C31                    	cmp al,'1' ;if(AL<'1') break
   246 00000899 7266                    	jb .10E
   247                                  
   248 0000089B 3C33                    	cmp al,'3';if(AL>'3') break
   249 0000089D 7762                    	ja .10E
   250                                  
   251 0000089F 88C1                    	mov cl,al		;cl = ÈîÆÁõòËæìÂÖ•
   252 000008A1 FEC9                    	dec cl
   253 000008A3 80E103                  	and cl,0x03     ;cl = 0~2
   254 000008A6 B80100                  	mov ax,0x0001  
   255 000008A9 D3E0                    	shl ax,cl		;ÊääÊØè‰∏™ËæìÂÖ•ËÆæÁΩÆ‰∏∫‰∏Ä‰∏™‰Ωç
   256 000008AB 31C3                    	xor bx,ax    ;bx = bx^ax  ;//ËÆæÁΩÆledÂÄº
   257                                  
   258                                  	;----------------
   259                                  	;LEDÂëΩ‰ª§‰º†Ëæì
   260                                  	;----------------
   261 000008AD FA                      	cli
   262                                  
   263 000008AE 68AD00E822FD83C402      	cdecl KBC_Cmd_Write, 0xAD ;//Êó†ÊïàÂåñÈîÆÁõò
   264                                  
   265 000008B7 68ED00E8D7FC83C402      	cdecl KBC_Data_Write,0XED ;//LEDËÆæÁΩÆ
   266 000008C0 68[5209]E8ECFC83C4-     	cdecl KBC_Data_Read,.key  ;//Á≠âÂæÖÈîÆÁõòÂõûÂ§ç
   266 000008C8 02                 
   267                                  	
   268 000008C9 803E[5209]FA            	cmp [.key],byte 0xFA  ;//ACK
   269 000008CE 7509                    	jne .11F
   270                                  
   271 000008D0 53E8C0FC83C402          	cdecl KBC_Data_Write,bx ;//LED Êï∞ÊçÆËæìÂá∫
   272 000008D7 EB1C                    	jmp .11E
   273                                  
   274                                  .11F:
   275 000008D9 6A046A106A0268-         	cdecl itoa,word[.key],.e1,2,16,0b100
   275 000008E0 [4E09]FF36[5209]E8-
   275 000008E7 23F983C40A         
   276 000008EC 68[4D09]E8B2F783C4-     	cdecl puts,.e0
   276 000008F4 02                 
   277                                  .11E:
   278                                  	
   279 000008F5 68AE00E8DBFC83C402      	cdecl KBC_Cmd_Write,0xAE ;//ÈîÆÁõòÊúâÊïàÂåñ
   280 000008FE FB                      	sti
   281 000008FF EB92                    	jmp .10L
   282                                  .10E:
   283 00000901 68[4409]E89DF783C4-     	cdecl puts,.s3
   283 00000909 02                 
   284                                  
   285 0000090A EB48                    	jmp stage_5
   286                                  
   287 0000090C 347264207374616765-     .s0 db "4rd stage...",0x0A,0X0D,0
   287 00000915 2E2E2E0A0D00       
   288 0000091B 413230204761746520-     .s1 db "A20 Gate Enabled.",0x0A,0x0D,0
   288 00000924 456E61626C65642E0A-
   288 0000092D 0D00               
   289 0000092F 4B6579426F61726420-     .s2 db "KeyBoard LED Test...",0
   289 00000938 4C454420546573742E-
   289 00000941 2E2E00             
   290 00000944 28646F6E65290A0D00      .s3 db "(done)",0x0A,0x0D,0
   291 0000094D 5B                      .e0 db "["
   292 0000094E 5A5A5D00                .e1 db "ZZ]",0
   293                                  
   294 00000952 0000                    .key dw 0
   295                                  
   296                                  stage_5:
   297 00000954 68[8009]E84AF783C4-     	cdecl puts,.s0
   297 0000095C 02                 
   298                                  
   299                                  	;------------
   300                                  	;ËØªÂÖ•kernel
   301                                  	;------------
   302                                  
   303 0000095D 68009C6A106A1068-       	cdecl read_lba,BOOT,BOOT_SECT,KERNEL_SECT,BOOT_END
   303 00000965 [9C00]E8C5FC83C408 
   304                                  
   305 0000096D 83F810                  	cmp ax,KERNEL_SECT ;//if(Ê≤°ÊúâËØªÂèñÂÆå) Âàôreboot 
   306 00000970 740C                    .10Q: jz	.10E
   307 00000972 68[8F09]E82CF783C4-     .10T: cdecl puts,.e0
   307 0000097A 02                 
   308 0000097B E845F7                  	call reboot	
   309                                  .10E:
   310                                  
   311 0000097E EB29                    	jmp		stage_6
   312                                  
   313 00000980 357468207374616765-     .s0		db	"5th stage...", 0x0A, 0x0D, 0
   313 00000989 2E2E2E0A0D00       
   314 0000098F 204661696C75726520-     .e0		db	" Failure load kernel...", 0x0A, 0x0D, 0
   314 00000998 6C6F6164206B65726E-
   314 000009A1 656C2E2E2E0A0D00   
   315                                  
   316                                  stage_6:
   317                                  	
   318 000009A9 68[C209]E8F5F683C4-     	cdecl puts,.s0
   318 000009B1 02                 
   319                                  .10L:				;//Á≠âÂæÖÈîÆÁõòËæìÂÖ•
   320 000009B2 B400                    	mov ah,0x00
   321 000009B4 CD16                    	int 0x16
   322 000009B6 3C20                    	cmp al,' '
   323 000009B8 75F8                    	jne .10L
   324                                  
   325                                  	;-----------------------
   326                                  	;video modeËÆæÂÆö
   327                                  	;-----------------------
   328 000009BA B81200                  	mov ax,0x0012
   329 000009BD CD10                    	int 0x10
   330                                  
   331 000009BF E9FA00                  	jmp stage_7
   332                                  
   333 000009C2 367468207374616765-     .s0 db "6th stage...",0x0A,0X0D,0X0A,0x0D
   333 000009CB 2E2E2E0A0D0A0D     
   334 000009D2 5B5075736820535041-     	db "[Push SPACE key to protect mode...]",0x0A,0x0D,0
   334 000009DB 4345206B657920746F-
   334 000009E4 2070726F7465637420-
   334 000009ED 6D6F64652E2E2E5D0A-
   334 000009F6 0D00               
   335                                  
   336                                  ;************************************************************************
   337                                  ;	ËØªÂèñÊñá‰ª∂
   338                                  ;************************************************************************
   339                                  read_file:
   340 000009F8 50                      		push	ax
   341 000009F9 53                      		push	bx
   342 000009FA 51                      		push	cx
   343                                  
   344 000009FB 6A1068[470A]680078-     		cdecl	memcpy, 0x7800, .s0, .s1 - .s0
   344 00000A03 E860FC83C406       
   345                                  
   346 00000A09 BB2002                  		mov		bx, 32 + 256 + 256				; BX = directory entryÁöÑÂÖàÂ§¥sector
   347 00000A0C B92000                  		mov		cx, (512 * 32) / 512			; CX = 512entryÂàÜÁöÑsectorÊï∞
   348                                  .10L:											; do
   349                                  												; {
   350                                  		;---------------------------------------
   351                                  		; 1sectorÔºà16entry)ÁöÑËØªÂÖ•
   352                                  		;---------------------------------------
   353 00000A0F 6800766A015368-         		cdecl	read_lba, BOOT, bx, 1, 0x7600	;   AX = read_lba();
   353 00000A16 [9C00]E814FC83C408 
   354 00000A1E 83F800                  		cmp		ax, 0							;   if (0 == AX)
   355 00000A21 741F                    		je		.10E							;     break;
   356                                  
   357                                  		;---------------------------------------
   358                                  		; ‰ªédirectory entry‰∏≠ÂØªÊâæÊñá‰ª∂Âêç
   359                                  		;---------------------------------------
   360 00000A23 E83100                  		cdecl	fat_find_file					;     AX = Êñá‰ª∂ÁöÑÊ£ÄÁ¥¢
   361 00000A26 83F800                  		cmp		ax, 0							;     if (AX)
   362 00000A29 7414                    		je		.12E							;     {
   363                                  												;       
   364 00000A2B 053E02                  		add		ax, 32 + 256 + 256 + 32 - 2		;       // sector‰ΩçÁΩÆÂä†‰∏äoffset
   365 00000A2E 6800786A015068-         		cdecl	read_lba, BOOT, ax, 1, 0x7800	;       read_lba() // Êñá‰ª∂ÁöÑËØªÂèñ
   365 00000A35 [9C00]E8F5FB83C408 
   366                                  												;       
   367 00000A3D EB03                    		jmp		.10E							;       break;
   368                                  .12E:											;     }
   369 00000A3F 43                      		inc		bx								;     BX++; //‰∏ã‰∏Ä‰∏™sectorÔºà16entryÔºâ
   370 00000A40 E2CD                    		loop	.10L							;   
   371                                  .10E:											; } while (--CX);
   372                                  
   373                                  	
   374 00000A42 59                      		pop		cx
   375 00000A43 5B                      		pop		bx
   376 00000A44 58                      		pop		ax
   377                                  
   378 00000A45 C3                      		ret
   379                                  
   380 00000A46 C3                      		ret
   381                                  
   382 00000A47 46696C65206E6F7420-     .s0:	db		'File not found.', 0
   382 00000A50 666F756E642E00     
   383                                  .s1:
   384                                  
   385                                  fat_find_file:
   386 00000A57 53                      		push	bx
   387 00000A58 51                      		push	cx
   388 00000A59 56                      		push	si
   389                                  
   390                                  		;---------------------------------------
   391                                  		; Ê£ÄÊü•fileÂêç
   392                                  		;---------------------------------------
   393 00000A5A FC                      		cld										; // DF clear+ÊñπÂêë
   394 00000A5B BB0000                  		mov		bx, 0							; BX = fileÁöÑÂÖàÂ§¥sector; // ÂàùÂßãÂÄº
   395 00000A5E B91000                  		mov		cx, 512 / 32					; CX = entryÊï∞;           // 1sector/32byte
   396 00000A61 BE0076                  		mov		si, 0x7600						; SI = sectorÁöÑÂú∞ÂùÄ; 
   397                                  												; do
   398                                  .10L:											; {
   399 00000A64 80640B18                		and		[si + 11], byte 0x18			;   // Ê£ÄÊü•fileÁöÑÂ±ûÊÄß
   400 00000A68 7516                    		jnz		.12E							;   if (directory/volumn level‰ª•Â§ñ)
   401                                  												;   {
   402 00000A6A 6A0B68[8B0A]56E80C-     		cdecl	memcmp, si, .s0, 8 + 3			;     AX = memcmp();ÊØîËæÉÊñá‰ª∂Âêç
   402 00000A72 FC83C406           
   403 00000A76 83F800                  		cmp		ax, 0							;     if (Áõ∏ÂêåÊñá‰ª∂Âêç)
   404 00000A79 7505                    		jne		.12E							;     {
   405                                  												;       
   406 00000A7B 8B5C1A                  		mov		bx, word [si + 0x1A]			;       BX = Êñá‰ª∂ÁöÑÂÖàÂ§¥sector;
   407 00000A7E EB05                    		jmp		.10E							;       break;
   408                                  												;     }
   409                                  .12E:											;   }
   410 00000A80 83C620                  		add		si, 32							;   SI += 32; // ‰∏ã‰∏Ä‰∏™entry
   411 00000A83 E2DF                    		loop	.10L							;   
   412                                  .10E:											; } while (--CX);
   413 00000A85 89D8                    		mov		ax, bx							; ret = ËøîÂõûÊñá‰ª∂ÂÖàÂ§¥sector;
   414                                  
   415                                  		
   416 00000A87 5E                      		pop		si
   417 00000A88 59                      		pop		cx
   418 00000A89 5B                      		pop		bx
   419                                  
   420 00000A8A C3                      		ret
   421                                  
   422 00000A8B 5350454349414C2054-     .s0:	db		'SPECIAL TXT', 0
   422 00000A94 585400             
   423                                  
   424                                  
   425                                  ;************************************************
   426                                  ;global descriptor table
   427                                  ;segment descriptor Êï∞ÁªÑ
   428                                  ;************************************************
   429                                  
   430 00000A97 00                      ALIGN 4,db 0
   431 00000A98 0000000000000000        GDT:			dq	0x00_0_0_0_0_000000_0000	;// NULL table
   432 00000AA0 FFFF0000009ACF00        .cs:			dq	0x00_C_F_9_A_000000_FFFF	;//CODE_table 4G
   433 00000AA8 FFFF00000092CF00        .ds:			dq	0x00_C_F_9_2_000000_FFFF	;//DATA_table 4G
   434                                  .gdt_end:
   435                                  
   436                                  ;-----------------------
   437                                  ;selector
   438                                  ;-----------------------
   439                                  SEL_CODE equ .cs - GDT    ;//Code selector
   440                                  SEL_DATA equ .ds - GDT    ;//Data selector
   441                                  
   442                                  ;------------------
   443                                  ;GDT
   444                                  ;------------------
   445 00000AB0 1700                    GDTR: dw GDT.gdt_end - GDT - 1		;//descriptor table ÁöÑÈôêÂà∂
   446 00000AB2 [980A0000]              	dd GDT							;//descriptor table ÁöÑÂú∞ÂùÄ
   447                                  
   448                                  ;----------------------------------
   449                                  ;IDT(‰∏∫‰∫ÜÁ¶ÅÊ≠¢‰∏≠Êñ≠)
   450                                  ;----------------------------------
   451 00000AB6 0000                    IDTR: dw 0			;IDT limit
   452 00000AB8 00000000                	dd 0			;IDT address
   453                                  
   454                                  ;***********************************
   455                                  ;stage7
   456                                  ;***********************************
   457                                  stage_7:
   458 00000ABC FA                      	cli
   459                                  	
   460                                  	;---------------
   461                                  	;load GDT
   462                                  	;---------------
   463 00000ABD 0F0116[B00A]            	lgdt [GDTR]				;// load global descriptor table
   464 00000AC2 0F011E[B60A]            	lidt [IDTR]				;//load interepter descriptor table
   465                                  	
   466                                  	;----------------
   467                                  	;ËøõÂÖ•‰øùÊä§Ê®°Âºè
   468                                  	;----------------
   469 00000AC7 0F20C0                  	mov eax,cr0 ;//ËÆæÁΩÆPE‰Ωç
   470 00000ACA 83C801                  	or ax,1		;// CR0 |=1;
   471 00000ACD 0F22C0                  	mov cr0,eax	;
   472                                  
   473                                  
   474 00000AD0 EB00                    	jmp $ + 2
   475                                  	
   476                                  	;--------------------
   477                                  	;segment‰πãÈó¥Ë∑≥ËΩ¨
   478                                  	;--------------------
   479                                  [BITS 32]
   480 00000AD2 66                      	DB 0x66     ;//Êìç‰ΩúÊï∞Â§ßÂ∞èoverideÂâçÁºÄ
   481 00000AD3 EA[DA0A0000]0800        	jmp SEL_CODE:CODE_32
   482                                  
   483                                  ;--------------------------------
   484                                  ;32bit‰ª£Á†ÅÊÆµÁöÑÂºÄÂßã
   485                                  ;--------------------------------
   486                                  
   487                                  CODE_32:
   488                                  
   489                                  	;---------------------
   490                                  	;selector ÂàùÂßãÂåñ
   491                                  	;---------------------
   492                                  
   493 00000ADA 66B81000                	mov ax,SEL_DATA
   494 00000ADE 8ED8                    	mov ds,ax
   495 00000AE0 8EC0                    	mov es,ax
   496 00000AE2 8EE0                    	mov fs,ax
   497 00000AE4 8EE8                    	mov gs,ax
   498 00000AE6 8ED0                    	mov ss,ax
   499                                  
   500                                  	;------------------
   501                                  	;Â§çÂà∂kernelÈÉ®ÂàÜ
   502                                  	;------------------
   503 00000AE8 B900080000              	mov ecx,(KERNEL_SIZE)/4  ;4byte‰Ωú‰∏∫‰∏Ä‰∏™Âçï‰ΩçÂ§çÂà∂
   504 00000AED BE009C0000              	mov esi,BOOT_END		 ;ESI = 0x0000_9C90 ;//kernelÈÉ®ÂàÜ
   505 00000AF2 BF00101000              	mov edi,KERNEL_LOAD      ;EDI = 0x0010_1000;//È´ò‰ΩçÂÜÖÂ≠ò
   506 00000AF7 FC                      	cld						 ;//Ê≠£ÊñπÂêë
   507 00000AF8 F3A5                    	rep movsd				 ;while(--ecx)*EDI++ = *ESI++
   508                                  
   509                                  	;---------------------
   510                                  	;Ë∑≥ËΩ¨Âà∞kernelÂ§ÑÁêÜ
   511                                  	;--------------------
   512 00000AFA E9(00101000)            	jmp KERNEL_LOAD		
   513                                  
   514                                  ;************************************************************************
   515                                  ;ËΩ¨ÁßªÂà∞real_mode
   516                                  ;************************************************************************
   517                                  TO_REAL_MODE:
   518 00000AFF 55                      		push	ebp								
   519 00000B00 89E5                    		mov		ebp, esp						
   520                                  		
   521 00000B02 60                      		pusha
   522                                  
   523 00000B03 FA                      		cli										; // Á¶ÅÊ≠¢‰∏≠Êñ≠
   524                                  
   525                                  		;---------------------------------------
   526                                  		; ‰øùÂ≠òÁä∂ÊÄÅÔºåËÆæÁΩÆ‰∏≠Êñ≠
   527                                  		;---------------------------------------
   528 00000B04 0F20C0                  		mov		eax, cr0						; 
   529 00000B07 A3[E90B0000]            		mov		[.cr0_saved], eax				; // ‰øùÂ≠òCR0ÂØÑÂ≠òÂô®
   530 00000B0C 8925[ED0B0000]          		mov		[.esp_saved], esp				; // ‰øùÂ≠òESPÂØÑÂ≠òÂô®
   531 00000B12 0F010D[E30B0000]        		sidt	[.idtr_save]					; // ‰øùÂ≠òIDTR
   532 00000B19 0F011D[DD0B0000]        		lidt	[.idtr_real]					; // ËÆæÂÆöreal_modeÁöÑ‰∏≠Êñ≠
   533                                  
   534                                  		;---------------------------------------
   535                                  		; 16ÊØîÁâπÁöÑsegment
   536                                  		;---------------------------------------
   537 00000B20 EA[270B0000]1800        		jmp		0x0018:.bit16					; CS = 0x18 Ôºàcode segment selectorÔºâ
   538                                  [BITS 16]
   539 00000B27 B82000                  .bit16:	mov		ax, 0x0020						; DS = 0x20 Ôºàdata segment selectorÔºâ
   540 00000B2A 8ED8                    		mov		ds, ax							; 
   541 00000B2C 8EC0                    		mov		es, ax							; 
   542 00000B2E 8ED0                    		mov		ss, ax							; 
   543                                  
   544                                  		;---------------------------------------
   545                                  		; Ê∏ÖÁ©∫PEÂíåPG
   546                                  		;---------------------------------------
   547 00000B30 0F20C0                  		mov		eax, cr0						; // PG/PE bit clear
   548 00000B33 6625FEFFFF7F            		and		eax,  0x7FFF_FFFE				; CR0 &= ~(PG | PE);
   549 00000B39 0F22C0                  		mov		cr0, eax						; 
   550 00000B3C EB00                    		jmp		$ + 2							;cach clear 
   551                                  
   552                                  		;---------------------------------------
   553                                  		; Â∞ÜÊâÄÊúâsegmentÂèòÊàê0
   554                                  		;---------------------------------------
   555 00000B3E EA[430B]0000            		jmp		0:.real							; CS = 0x0000;
   556 00000B43 B80000                  .real:	mov		ax, 0x0000						; 
   557 00000B46 8ED8                    		mov		ds, ax							; DS = 0x0000;
   558 00000B48 8EC0                    		mov		es, ax							; ES = 0x0000;
   559 00000B4A 8ED0                    		mov		ss, ax							; SS = 0x0000;
   560 00000B4C BC007C                  		mov		sp, 0x7C00						; SP = 0x7C00;
   561                                  
   562                                  		;---------------------------------------
   563                                  		; ‰∏≠Êñ≠maskÁöÑËÆæÂÆö(real mode)
   564                                  		;---------------------------------------
   565                                  		outp	0x20, 0x11						; out(0x20, 0x11); // MASTER.ICW1 = 0x11;
   565 00000B4F B011                <1>  mov al,%2
   565 00000B51 E620                <1>  out %1,al
   566                                  		outp	0x21, 0x08						; out(0x21, 0x20); // MASTER.ICW2 = 0x08;
   566 00000B53 B008                <1>  mov al,%2
   566 00000B55 E621                <1>  out %1,al
   567                                  		outp	0x21, 0x04						; out(0x21, 0x04); // MASTER.ICW3 = 0x04;
   567 00000B57 B004                <1>  mov al,%2
   567 00000B59 E621                <1>  out %1,al
   568                                  		outp	0x21, 0x01						; out(0x21, 0x05); // MASTER.ICW4 = 0x01;
   568 00000B5B B001                <1>  mov al,%2
   568 00000B5D E621                <1>  out %1,al
   569                                  
   570                                  		outp	0xA0, 0x11						; out(0xA0, 0x11); // SLAVE.ICW1  = 0x11;
   570 00000B5F B011                <1>  mov al,%2
   570 00000B61 E6A0                <1>  out %1,al
   571                                  		outp	0xA1, 0x10						; out(0xA1, 0x28); // SLAVE.ICW2  = 0x10;
   571 00000B63 B010                <1>  mov al,%2
   571 00000B65 E6A1                <1>  out %1,al
   572                                  		outp	0xA1, 0x02						; out(0xA1, 0x02); // SLAVE.ICW3  = 0x02;
   572 00000B67 B002                <1>  mov al,%2
   572 00000B69 E6A1                <1>  out %1,al
   573                                  		outp	0xA1, 0x01						; out(0xA1, 0x01); // SLAVE.ICW4  = 0x01;
   573 00000B6B B001                <1>  mov al,%2
   573 00000B6D E6A1                <1>  out %1,al
   574                                  
   575                                  		outp	0x21, 0b_1011_1000				; // ‰∏≠Êñ≠ÊúâÊïà:FDD/slavePIC/KBC/timer
   575 00000B6F B0B8                <1>  mov al,%2
   575 00000B71 E621                <1>  out %1,al
   576                                  		outp	0xA1, 0b_1011_1110				; // ‰∏≠Êñ≠ÊúâÊïàÔºöHDD/RTC
   576 00000B73 B0BE                <1>  mov al,%2
   576 00000B75 E6A1                <1>  out %1,al
   577                                  
   578 00000B77 FB                      		sti
   579                                  		;---------------------------------------
   580                                  		; ËØªÂèñÊñá‰ª∂
   581                                  		;---------------------------------------
   582 00000B78 E87DFE                  		cdecl	read_file						; read_file();
   583                                  
   584 00000B7B FA                      		cli										; // ‰∏≠Êñ≠Á¶ÅÊ≠¢
   585                                  
   586                                  		outp	0x20, 0x11						; // MASTER.ICW1 = 0x11;
   586 00000B7C B011                <1>  mov al,%2
   586 00000B7E E620                <1>  out %1,al
   587                                  		outp	0x21, 0x20						; // MASTER.ICW2 = 0x20;
   587 00000B80 B020                <1>  mov al,%2
   587 00000B82 E621                <1>  out %1,al
   588                                  		outp	0x21, 0x04						; // MASTER.ICW3 = 0x04;
   588 00000B84 B004                <1>  mov al,%2
   588 00000B86 E621                <1>  out %1,al
   589                                  		outp	0x21, 0x01						; // MASTER.ICW4 = 0x01;
   589 00000B88 B001                <1>  mov al,%2
   589 00000B8A E621                <1>  out %1,al
   590                                  
   591                                  		outp	0xA0, 0x11						; // SLAVE.ICW1  = 0x11;
   591 00000B8C B011                <1>  mov al,%2
   591 00000B8E E6A0                <1>  out %1,al
   592                                  		outp	0xA1, 0x28						; // SLAVE.ICW2  = 0x28;
   592 00000B90 B028                <1>  mov al,%2
   592 00000B92 E6A1                <1>  out %1,al
   593                                  		outp	0xA1, 0x02						; // SLAVE.ICW3  = 0x02;
   593 00000B94 B002                <1>  mov al,%2
   593 00000B96 E6A1                <1>  out %1,al
   594                                  		outp	0xA1, 0x01						; // SLAVE.ICW4  = 0x01;
   594 00000B98 B001                <1>  mov al,%2
   594 00000B9A E6A1                <1>  out %1,al
   595                                  
   596                                  		outp	0x21, 0b_1111_1000				; // ÁªàÁ´ØÊúâÊïàÔºöslave_PIC/KBC/timer
   596 00000B9C B0F8                <1>  mov al,%2
   596 00000B9E E621                <1>  out %1,al
   597                                  		outp	0xA1, 0b_1111_1110				; // ‰∏≠Êñ≠ÊúâÊïàÔºöRTC
   597 00000BA0 B0FE                <1>  mov al,%2
   597 00000BA2 E6A1                <1>  out %1,al
   598                                  
   599                                  
   600                                  		;---------------------------------------
   601                                  		; 16bitÁöÑ‰øùÊä§Ê®°Âºè
   602                                  		;---------------------------------------
   603 00000BA4 0F20C0                  		mov		eax, cr0						; // PE_bit set
   604 00000BA7 6683C801                		or		eax, 1							; CR0 |= PE;
   605 00000BAB 0F22C0                  		mov		cr0, eax						; 
   606                                  
   607 00000BAE EB00                    		jmp		$ + 2							; cache clear
   608                                  
   609                                  		;---------------------------------------
   610                                  		; 32bit‰øùÊä§Ê®°Âºè
   611                                  		;---------------------------------------
   612 00000BB0 66                      		DB		0x66							; 32bit overwrite
   613                                  [BITS 32]
   614 00000BB1 EA[B80B0000]0800        		jmp		0x0008:.bit32					; CS = 32bitCS;
   615 00000BB8 66B81000                .bit32:	mov		ax, 0x0010						; DS = 32bitDS;
   616 00000BBC 8ED8                    		mov		ds, ax							;
   617 00000BBE 8EC0                    		mov		es, ax							;
   618 00000BC0 8ED0                    		mov		ss, ax							;
   619                                  
   620                                  		;---------------------------------------
   621                                  		; ÂÑóÂÉïÂÉóÂÉûÊÑùÊéïÂÅ∫ÊöÖÂ©£
   622                                  		;---------------------------------------
   623 00000BC2 8B25[ED0B0000]          		mov		esp, [.esp_saved]				; // ESPÂØÑÂ≠òÂô®ÁöÑÊÅ¢Â§ç
   624 00000BC8 A1[E90B0000]            		mov		eax, [.cr0_saved]				; // CR0ÂØÑÂ≠òÂô®ÁöÑÊÅ¢Â§ç
   625 00000BCD 0F22C0                  		mov		cr0, eax						; 
   626 00000BD0 0F011D[E30B0000]        		lidt	[.idtr_save]					; // IDTRÊÅ¢Â§ç
   627                                  
   628 00000BD7 FB                      		sti 									; // ÂÖÅËÆ∏‰∏≠Êñ≠
   629                                  
   630                                  		
   631 00000BD8 61                      		popa
   632                                  
   633 00000BD9 89EC                    		mov		esp, ebp
   634 00000BDB 5D                      		pop		ebp
   635                                  
   636 00000BDC C3                      		ret
   637                                  
   638                                  .idtr_real:
   639 00000BDD FF03                    		dw 		0x3FF							; idt_limit
   640 00000BDF 00000000                		dd 		0								; idt location
   641                                  
   642                                  .idtr_save:
   643 00000BE3 0000                    		dw 		0								; ÂÑïÂÑàÂÉ¢ÂÉ©
   644 00000BE5 00000000                		dd 		0								; ÂÑÄ‰πïÂÉó
   645                                  
   646                                  .cr0_saved:
   647 00000BE9 00000000                		dd		0
   648                                  
   649                                  .esp_saved:
   650 00000BED 00000000                		dd		0
   651                                  
   652                                  ;************************************************************************
   653                                  ;padding
   654                                  ;************************************************************************
   655 00000BF1 00<rept>                		times BOOT_SIZE - ($ - $$) - 16	db	0	; ÂÉ∑ÂÉ®ÂÇøÂÑûÂÉå
   656                                  
   657 00001FF0 [FF0A0000]              		dd 		TO_REAL_MODE					; ÂÑïÂÇæÂÑñÂÑå‰πïÂÉ™Â†èÂ≥¥ÂÉæÂÑòÂÉåÂÑîÂÑâ
   658                                  
   659                                  ;**********************
   660                                  ;padding
   661                                  ;**********************
   662 00001FF4 00<rept>                	times BOOT_SIZE-($-$$) db 0 ;//8KB
